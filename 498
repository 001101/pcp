#!/bin/sh
# PCP QA Test No. 498
# exercise pmdaEventQueue interfaces
#
# Copyright (c) 2011 Nathan Scott.  All Rights Reserved.
#

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

seq=`basename $0`
echo "QA output created by $seq"

status=0	# success is the default!
$sudo rm -rf $tmp.* $seq.full
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
        -e 's/^\[[A-Z].. [A-Z]..  *[0-9][0-9]* ..:..:..]/[DATE]/' \
        -e 's/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9][0-9][0-9]/[TIME]/' \
        -e 's/ 0x[0-9a-f][0-9a-f]* / 0xADDR /' \
        -e 's/queue([0-9][0-9]*)/queue(PID)/' \
        -e "s;$PCP_VAR_DIR;\$PCP_VAR_DIR;"
}

_queue_test()
{
    # always enable library debugging, do a final dump, stash and filter
    src-oss/pmdaqueue -Dlibpmda $@ 2>&1 | tee -a $seq.full | _filter
}

# real QA test starts here
echo
echo "events arriving with no queues setup yet (fail)"
_queue_test -E 0,1024

echo
echo "attempt to register duplicate queue names (fail)"
_queue_test -q queue1,1024 -q queue1,1024

echo
echo "attempt queue creation without memory limit (fail)"
_queue_test -q queue1,0

echo
echo "create one queue, events arriving with no clients yet"
_queue_test -q queue1,1024 -e queue1,128 -e queue1,42 -e queue1,18 -s queue1

# WIP...

#echo
#echo "multiple queues, events arriving with multiple clients"
#_queue_test \
#    -q queue1,1024 -q queue2,512 \
#    -e queue1,128 -e queue2,24 -e queue1,18 -e queue2,228 -e queue1,142 -e queue2,28 \
#    -s queue1 -s queue2 \
#    -q queue3,356 \
#    -e queue3,328 -e queue3,32 -e queue1,17 -e queue2,227 \
#    -s queue1 -s queue2 -s queue3

#echo
#echo "multiple queues, events arriving with clients, clients quit, more events"

#echo
#echo "multiple queues, events arriving with filtering clients"


# success, all done
exit
