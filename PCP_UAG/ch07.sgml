<!-- Fragment document type declaration subset:
ArborText, Inc., 1988-1997, v.4001
<!DOCTYPE SGIDOCBK PUBLIC "-//Silicon Graphics, Inc.//DTD DocBook V2.3-based Subset V1.5//EN" [
<!ENTITY disclaimer.sgml SYSTEM "frontmatter/disclaimer.sgml">
<!ENTITY o3000 SYSTEM "online/o3000.gif" NDATA gif>
<!ENTITY figure5y SYSTEM "online/figure5y.gif" NDATA gif>
<!ENTITY figure5x SYSTEM "online/figure5x.gif" NDATA gif>
<!ENTITY mpivis SYSTEM "online/mpivis.gif" NDATA gif>
<!ENTITY oview-tool.sgml SYSTEM "oview-tool.sgml">
<!ENTITY glossary.sgml SYSTEM "glossary.sgml">
<!ENTITY chap09.misc.sgml SYSTEM "chap09.misc.sgml">
<!ENTITY chap08.pixie.sgml SYSTEM "chap08.pixie.sgml">
<!ENTITY chap07.prof.sgml SYSTEM "chap07.prof.sgml">
<!ENTITY chap06.ssrun.sgml SYSTEM "chap06.ssrun.sgml">
<!ENTITY chap05.machuse.sgml SYSTEM "chap05.machuse.sgml">
<!ENTITY chap04.exptypes.sgml SYSTEM "chap04.exptypes.sgml">
<!ENTITY chap03.ftut.sgml SYSTEM "chap03.ftut.sgml">
<!ENTITY chap02.ctut.sgml SYSTEM "chap02.ctut.sgml">
<!ENTITY chap01.intro.sgml SYSTEM "chap01.intro.sgml">
<!ENTITY whentouseidmap.sgml SYSTEM "whentouseidmap.sgml">
<!ENTITY nfsintro.sgml SYSTEM "nfsintro.sgml">
<!ENTITY idmapping.sgml SYSTEM "idmapping.sgml">
<!ENTITY chapB.sgml SYSTEM "chapB.sgml">
<!ENTITY chapC.sgml SYSTEM "chapC.sgml">
<!ENTITY chapD.sgml SYSTEM "chapD.sgml">
<!ENTITY chapE.sgml SYSTEM "chapE.sgml">
<!ENTITY chapF.sgml SYSTEM "chapF.sgml">
<!ENTITY chapA.sgml SYSTEM "chapA.sgml">
<!ENTITY chap01.sgml SYSTEM "chap01.sgml">
<!ENTITY chap02.sgml SYSTEM "chap02.sgml">
<!ENTITY chap03.sgml SYSTEM "chap03.sgml">
<!ENTITY chap04.sgml SYSTEM "chap04.sgml">
<!ENTITY a12231 SYSTEM "online/a12231.gif" NDATA gif>
<!ENTITY a12129 SYSTEM "online/a12129.gif" NDATA gif>
<!ENTITY a11363 SYSTEM "online/a11363.gif" NDATA gif>
<!ENTITY a11362 SYSTEM "online/a11362.gif" NDATA gif>
<!ENTITY a10650 SYSTEM "online/a10650.gif" NDATA gif>
<!ENTITY a10209 SYSTEM "online/a10209.gif" NDATA gif>
<!ENTITY a10180 SYSTEM "online/a10180.gif" NDATA gif>
<!ENTITY a10181 SYSTEM "online/a10181.gif" NDATA gif>
<!ENTITY a10195 SYSTEM "online/a10195.gif" NDATA gif>
<!ENTITY a10196 SYSTEM "online/a10196.gif" NDATA gif>
<!ENTITY a10197 SYSTEM "online/a10197.gif" NDATA gif>
<!ENTITY a10198 SYSTEM "online/a10198.gif" NDATA gif>
<!ENTITY a10200 SYSTEM "online/a10200.gif" NDATA gif>
<!ENTITY a10201 SYSTEM "online/a10201.gif" NDATA gif>
<!ENTITY a10206 SYSTEM "online/a10206.gif" NDATA gif>
<!ENTITY a10207 SYSTEM "online/a10207.gif" NDATA gif>
<!ENTITY a10253 SYSTEM "online/a10253.gif" NDATA gif>
<!ENTITY a10254 SYSTEM "online/a10254.gif" NDATA gif>
<!ENTITY a10255 SYSTEM "online/a10255.gif" NDATA gif>
<!ENTITY a10256 SYSTEM "online/a10256.gif" NDATA gif>
<!ENTITY a10257 SYSTEM "online/a10257.gif" NDATA gif>
<!ENTITY a10258 SYSTEM "online/a10258.gif" NDATA gif>
<!ENTITY a10259 SYSTEM "online/a10259.gif" NDATA gif>
<!ENTITY a11427 SYSTEM "online/a11427.gif" NDATA gif>
<!ENTITY a11428 SYSTEM "online/a11428.gif" NDATA gif>
<!ENTITY a11429 SYSTEM "online/a11429.gif" NDATA gif>
<!ENTITY a11430 SYSTEM "online/a11430.gif" NDATA gif>
<!ENTITY a11431 SYSTEM "online/a11431.gif" NDATA gif>
<!ENTITY a11432 SYSTEM "online/a11432.gif" NDATA gif>
<!ENTITY conventions.abbreviation SYSTEM "frontmatter/conventions.abbreviation.sgml">
<!ENTITY collections SYSTEM "dwebcollections.sgml">
<!ENTITY unicos SYSTEM "frontmatter/unicos.sgml">
<!ENTITY trademarks SYSTEM "frontmatter/trademarks.sgml">
<!ENTITY disclaimer SYSTEM "frontmatter/disclaimer.sgml">
<!ENTITY rights SYSTEM "frontmatter/rights.sgml">
<!ENTITY manpage.section SYSTEM "frontmatter/manpage.section.sgml">
<!ENTITY % public.private "INCLUDE">
<!ENTITY % proprietary "IGNORE">
<!ENTITY % private "IGNORE">
<!ENTITY % public "INCLUDE">
<!ENTITY % craysoft "INCLUDE">
<!ENTITY conventions.ellipses SYSTEM "frontmatter/conventions.ellipses.sgml">
<!ENTITY conventions.manpage SYSTEM "frontmatter/conventions.manpage.sgml">
<!ENTITY conventions.variable SYSTEM "frontmatter/conventions.variable.sgml">
<!ENTITY conventions.brackets SYSTEM "frontmatter/conventions.brackets.sgml">
<!ENTITY conventions.command SYSTEM "frontmatter/conventions.command.sgml">
<!ENTITY conventions.userinput SYSTEM "frontmatter/conventions.userinput.sgml">
<!ENTITY machines.craympp SYSTEM "frontmatter/machines.craympp.sgml">
<!ENTITY machines.allcraysystems SYSTEM "frontmatter/machines.allcraysystems.sgml">
<!ENTITY standards SYSTEM "frontmatter/standards.sgml">
<!ENTITY reader.comments SYSTEM "frontmatter/reader.comments.sgml">
<!ENTITY ordering.pubs SYSTEM "frontmatter/ordering.pubs.sgml">
<!ENTITY a12229 SYSTEM "online/a12229.gif" NDATA gif>
<!ENTITY a12228 SYSTEM "online/a12228.gif" NDATA gif>
<!ENTITY a12227 SYSTEM "online/a12227.gif" NDATA gif>
<!ENTITY a12226 SYSTEM "online/a12226.gif" NDATA gif>
<!ENTITY a12225 SYSTEM "online/a12225.gif" NDATA gif>
<!ENTITY a12224 SYSTEM "online/a12224.gif" NDATA gif>
<!ENTITY a12223 SYSTEM "online/a12223.gif" NDATA gif>
<!ENTITY a12222 SYSTEM "online/a12222.gif" NDATA gif>
<!ENTITY a12221 SYSTEM "online/a12221.gif" NDATA gif>
<!ENTITY a12220 SYSTEM "online/a12220.gif" NDATA gif>
<!ENTITY a12219 SYSTEM "online/a12219.gif" NDATA gif>
<!ENTITY a12218 SYSTEM "online/a12218.gif" NDATA gif>
<!ENTITY a12217 SYSTEM "online/a12217.gif" NDATA gif>
<!ENTITY a12216 SYSTEM "online/a12216.gif" NDATA gif>
<!ENTITY a12215 SYSTEM "online/a12215.gif" NDATA gif>
<!ENTITY a12214 SYSTEM "online/a12214.gif" NDATA gif>
<!ENTITY a12213 SYSTEM "online/a12213.gif" NDATA gif>
<!ENTITY a12212 SYSTEM "online/a12212.gif" NDATA gif>
<!ENTITY a12211 SYSTEM "online/a12211.gif" NDATA gif>
<!ENTITY a12210 SYSTEM "online/a12210.gif" NDATA gif>
<!ENTITY a12209 SYSTEM "online/a12209.gif" NDATA gif>
<!ENTITY a12208 SYSTEM "online/a12208.gif" NDATA gif>
<!ENTITY a12207 SYSTEM "online/a12207.gif" NDATA gif>
<!ENTITY a12206 SYSTEM "online/a12206.gif" NDATA gif>
<!ENTITY a12205 SYSTEM "online/a12205.gif" NDATA gif>
<!ENTITY a12204 SYSTEM "online/a12204.gif" NDATA gif>
<!ENTITY a12203 SYSTEM "online/a12203.gif" NDATA gif>
<!ENTITY a12202 SYSTEM "online/a12202.gif" NDATA gif>
<!ENTITY a12201 SYSTEM "online/a12201.gif" NDATA gif>
<!ENTITY a12200 SYSTEM "online/a12200.gif" NDATA gif>
<!ENTITY a12199 SYSTEM "online/a12199.gif" NDATA gif>
<!ENTITY a12198 SYSTEM "online/a12198.gif" NDATA gif>
<!ENTITY a12197 SYSTEM "online/a12197.gif" NDATA gif>
<!ENTITY a12196 SYSTEM "online/a12196.gif" NDATA gif>
<!ENTITY a12195 SYSTEM "online/a12195.gif" NDATA gif>
<!ENTITY a12194 SYSTEM "online/a12194.gif" NDATA gif>
<!ENTITY a12193 SYSTEM "online/a12193.gif" NDATA gif>
<!ENTITY a12192 SYSTEM "online/a12192.gif" NDATA gif>
<!ENTITY a12191 SYSTEM "online/a12191.gif" NDATA gif>
<!ENTITY a12190 SYSTEM "online/a12190.gif" NDATA gif>
<!ENTITY a12189 SYSTEM "online/a12189.gif" NDATA gif>
<!ENTITY % IRIX.intros "IGNORE">
<!ENTITY % UAG "INCLUDE">
<!ENTITY ch01.sgml SYSTEM "ch01.sgml">
<!ENTITY ch02.sgml SYSTEM "ch02.sgml">
<!ENTITY ch03.sgml SYSTEM "ch03.sgml">
<!ENTITY ch04.sgml SYSTEM "ch04.sgml">
<!ENTITY ch05.sgml SYSTEM "ch05.sgml">
<!ENTITY ch06.sgml SYSTEM "ch06.sgml">
<!ENTITY ch08.sgml SYSTEM "ch08.sgml">
<!ENTITY ch09.sgml SYSTEM "ch09.sgml">
<!ENTITY chA.sgml SYSTEM "chA.sgml">
<!ENTITY preface.sgml SYSTEM "preface.sgml">
]>
-->
<?Pub UDT _bookmark _target>
<?Pub UDT _nopagebreak _touchup KeepsKeep="yes" KeepsPrev="no" KeepsNext="no" KeepsBoundary="page">
<chapter id="LE93354-PARENT">
<title id="LE93354-TITLE">Archive Logging</title>
<para><indexterm><primary>archive logs</primary><secondary>usage</secondary>
</indexterm>Performance monitoring and management in complex systems demands
the ability to accurately capture performance characteristics for subsequent
review, analysis, and comparison. Performance Co-Pilot (PCP) provides extensive
support for the creation and management of archive logs that capture a user-specified
profile of performance information to support retrospective performance analysis.
</para>
<para>The following major sections are included in this chapter:</para>
<itemizedlist>
<listitem><para><xref linkend="LE43411-PARENT">, presents the concepts and
issues involved with creating and using archive logs.</para>
</listitem>
<listitem><para><xref linkend="LE46764-PARENT">, describes the interaction
of the PCP tools with archive logs.</para>
</listitem>
<listitem><para><xref linkend="LE57424-PARENT">, shows some shortcuts for
setting up useful PCP archive logs.</para>
</listitem>
<listitem><para><xref linkend="Z930642977sdc">, provides information about
other archive logging features and sevices.</para>
</listitem>
<listitem><para><xref linkend="LE80113-PARENT">, presents helpful directions
if your archive logging implementation is not functioning correctly.</para>
</listitem></itemizedlist>
<section id="LE43411-PARENT">
<title id="LE43411-TITLE">Introduction to Archive Logging</title>
<para><indexterm id="ITch07-2"><primary>pmlogger tool</primary><secondary>
archive logs</secondary></indexterm>Within the PCP, the <command>pmlogger
</command> utility may be configured to collect archives of performance metrics.
The archive creation process is easy and very flexible, incorporating the
following features:</para>
<itemizedlist>
<listitem><para>Archive log creation at either a PCP collector (typically
a server) or a PCP monitor system (typically a workstation), or at some designated
PCP archive logger host.</para>
</listitem>
<listitem><para>Concurrent independent logging, both local and remote. The
performance analyst can activate a private <command>pmlogger</command> instance
to collect only the metrics of interest for the problem at hand, independent
of other logging on the workstation or remote host.</para>
</listitem>
<listitem><para>Independent determination of logging frequency for individual
metrics or metric instances. For example, you could log the &ldquo;5 minute&rdquo;
load average every half hour, the write I/O rate on the DBMS log spindle every
10 seconds, and aggregate I/O rates on the other disks every minute.</para>
</listitem>
<listitem><para><indexterm><primary>pmlc tool</primary><secondary>dynamic
adjustment</secondary></indexterm><indexterm><primary>pmlogger tool</primary>
<secondary>pmlc control</secondary></indexterm>Dynamic adjustment of what
is to be logged, and how frequently, via <command>pmlc</command>. This feature
may be used to disable logging or to increase the sample interval during periods
of low activity or chronic high activity (to minimize logging overhead and
intrusion). A local <command>pmlc</command> may interrogate and control a
remote <command>pmlogger</command>, subject to the access control restrictions
implemented by <command>pmlogger</command>.</para>
</listitem>
<listitem><para>Self-contained logs that include all system configuration
and metadata required to interpret the values in the log. These logs can be
kept for analysis at a much later time, potentially after the hardware or
software has been reconfigured and the logs have been stored as discrete,
autonomous files for remote analysis.</para>
</listitem>
<listitem><para><indexterm><primary>cron scripts</primary></indexterm><literal>
cron</literal>-based scripts to expedite the operational management, for example,
log rotation, consolidation, and culling.</para>
</listitem>
<listitem><para><indexterm><primary>mkaf tool</primary></indexterm><indexterm>
<primary>pmafm tool</primary><secondary>archive folios</secondary></indexterm>Archive
folios as a convenient aggregation of multiple archive logs. Archive folios
may be created with the <command>mkaf</command> utility and processed with
the <?Pub Caret><command>pmafm</command> tool.</para>
</listitem></itemizedlist>
<section>
<title>Archive Logs and the PMAPI</title>
<para><indexterm><primary>archive logs</primary><secondary>PMAPI</secondary>
</indexterm>Critical to the success of the PCP archive logging scheme is the
fact that the library routines providing access to real-time feeds of performance
metrics also provide access to the archive logs.</para>
<para><indexterm><primary>PMAPI</primary><secondary>archive logs</secondary>
</indexterm>Live feeds (or real-time) sources of performance metrics and archives
are literally interchangeable, with a single Performance Metrics Application
Programming Interface (PMAPI) that preserves the same semantics for both styles
of metric source. In this way, applications and tools developed against the
PMAPI can automatically process either live or historical performance data.
</para>
<para>The only restriction is that both live and historical data cannot be
monitored simultaneously with the same invocation of a visualization tool.
</para>
</section>
<section>
<title>Retrospective Analysis Using Archive Logs</title>
<para><indexterm><primary>archive logs</primary><secondary>retrospective analysis
</secondary></indexterm><indexterm><primary>retrospective analysis</primary>
</indexterm>One of the most important applications of archive logging services
provided by PCP is in the area of retrospective analysis. In many cases, understanding
today's performance problems can be assisted by side-by-side comparisons with
yesterday's performance. With routine creation of performance archive logs,
you can concurrently replay pictures of system performance for two or more
periods in the past.</para>
<para>Archive logs are also an invaluable source of intelligence when trying
to diagnose what went wrong, as in a performance postmortem. Because the PCP
archive logs are entirely self-contained, this analysis can be performed off-site
if necessary.</para>
<para>Each archive log contains metric values from only one host. However,
many PCP tools can simultaneously visualize values from multiple archives
collected from different hosts.</para>
<para>The archives can be replayed against the inference engine (<command>
pmie</command> is an application that uses the PMAPI). This allows you to
automate the regular, first-level analysis of system performance.</para>
<para>Such analysis can be performed by constructing suitable expressions
to capture the essence of common resource saturation problems, then periodically
creating an archive and playing it against the expressions. For example, you
may wish to create a daily performance audit (run by the <literal>cron</literal>
command) to detect performance regressions.</para>
<para>For more about <command>pmie</command>, see <xref linkend="LE21414-TITLE">.
</para>
</section>
<section>
<title>Using Archive Logs for Capacity Planning</title>
<para><indexterm><primary>archive logs</primary><secondary>capacity planning
</secondary></indexterm><indexterm><primary>capacity planning</primary></indexterm>By
collecting performance archives with relatively long sampling periods, or
by reducing the daily archives to produce summary logs, the capacity planner
can collect the base data required for forward projections, and can estimate
resource demands and explore &ldquo;what if&rdquo; scenarios by replaying
data using visualization tools and the inference engine.</para>
</section>
</section>
<section id="LE46764-PARENT">
<title id="LE46764-TITLE">Using Archive Logs with Performance Tools</title>
<para><indexterm id="ITch07-4"><primary>performance visualization tools</primary>
</indexterm>Most PCP tools default to real-time display of current values
for performance metrics from PCP collector host(s). However, most PCP tools
also have the capability to display values for performance metrics retrieved
from PCP archive log(s). The following sections describe plans, steps, and
general issues involving archive logs and the PCP tools.</para>
<section>
<title>Coordination between <command>pmlogger</command> and PCP tools</title>
<para><indexterm><primary>pmlogger tool</primary><secondary>PCP tool coordination
</secondary></indexterm>Most commonly, a PCP tool would be invoked with the <literal>
-a</literal> option to process an archive log some time after <command>pmlogger
</command> had finished creating the archive. However, a tool such as <command>
oview</command> that uses a Time Control dialog (see <xref linkend="LE76997-PARENT">)
stops when the end of archive is reached, but could resume if more data is
written to the PCP archive log.<note><para><indexterm><primary>SIGUSR1 signal
</primary></indexterm><indexterm><primary>flush command</primary></indexterm><indexterm>
<primary>pmlc tool</primary><secondary>flush command</secondary></indexterm><command>
pmlogger</command> uses buffered I/O to write the archive log so that the
end of the archive may be aligned with an I/O buffer boundary, rather than
with a logical archive log record. If such an archive was read by a PCP tool,
it would appear truncated and might confuse the tool. These problems may be
avoided by sending <command>pmlogger</command> a <literal>SIGUSR1</literal>
signal, or by using the <command>flush</command> command of <command>pmlc
</command> to force <command>pmlogger</command> to flush its output buffers.
</para>
</note></para>
</section><![ %UAG; [<section>
<title>Administering PCP Archive Logs Using <command>cron</command> Scripts
</title>
<para><indexterm id="ITch07-6"><primary>cron scripts</primary></indexterm><indexterm>
<primary>scripts</primary></indexterm>The IRIX operating system supports the
standard <literal>cron</literal> process scheduling system.</para>
<para><indexterm id="ITch07-7"><primary>pmlogger_check script</primary></indexterm><indexterm>
<primary>pmlogger_daily script</primary></indexterm><indexterm><primary>pmsnap
tool</primary><secondary>script usage</secondary></indexterm><indexterm><primary>
pmlogger_merge script</primary></indexterm>PCP supplies shell scripts to use
the <literal>cron</literal> functionality to help manage your archive logs.
The following scripts are supplied:</para>
<deflist>
<colheads>
<head1>Script</head1><head2>Description</head2></colheads>
<deflistentry>
<term><literal>pmlogger_daily</literal></term>
<listitem><para>Performs a daily housecleaning of archive logs and notices.
</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>pmlogger_merge</literal></term>
<listitem><para><literal></literal>Merges archive logs and is called by <literal>
pmlogger_daily</literal>.</para>
</listitem></deflistentry>
<deflistentry>
<term><literal>pmlogger_check</literal></term>
<listitem><para>Checks to see that all desired <command>pmlogger</command>
processes are running on your system, and invokes any that are missing for
any reason.</para>
</listitem></deflistentry>
<deflistentry>
<term><command>pmsnap</command></term>
<listitem><para>Generates graphic image snapshots of <command>pmchart</command>
performance charts at regular intervals.</para>
</listitem></deflistentry>
</deflist>
<para><indexterm><primary>/var/pcp/config/pmlogger/control file</primary>
</indexterm>The configuration files used by these scripts can be edited to
suit your particular needs, and are generally controlled by the <filename>
/var/pcp/config/pmlogger/control</filename> file (<literal>pmsnap</literal>
has an additional control file). Complete information on these scripts is
available in the <command sectionref="1">pmlogger_daily</command> and <command
sectionref="1">pmsnap</command> man pages.</para>
</section>]]>
<section id="LE92914-PARENT">
<title id="LE92914-TITLE">Archive Log File Management</title>
<para><indexterm><primary>archive logs</primary><secondary>file management
</secondary></indexterm>PCP archive log files can occupy a great deal of disk
space, and management of archive logs can be a large task in itself. The following
sections provide information to assist you in PCP archive log file management.
</para>
<section>
<title>Basename Conventions</title>
<para><indexterm><primary>basename conventions</primary></indexterm>When a
PCP archive is created by <command>pmlogger</command>, an archive basename
must be specified and several physical files are created, as shown in <xref
linkend="LE76271-TITLE">.</para>
<table frame="topbot">
<tbltitle id="LE76271-TITLE">Filenames for PCP Archive Log Components (<literal>
archive</literal>.<replaceable>*</replaceable>)</tbltitle>
<tgroup cols="2" colsep="0" rowsep="0">
<colspec colwidth="102*">
<colspec colwidth="294*">
<thead>
<row rowsep="1"><entry align="left" valign="bottom"><para>Filename</para></entry>
<entry align="left" valign="bottom"><para>Contents</para></entry></row></thead>
<tbody>
<row>
<entry align="left" valign="top"><para><filename>archive.</filename><emphasis></emphasis><replaceable>
index</replaceable></para></entry>
<entry align="left" valign="top"><para>Temporal index for rapid access to
archive contents.</para></entry></row>
<row>
<entry align="left" valign="top"><para><filename>archive.</filename><replaceable>
meta</replaceable></para></entry>
<entry align="left" valign="top"><para>Metadata descriptions for performance
metrics and instance domains appearing in the archive.</para></entry></row>
<row>
<entry align="left" valign="top"><para><filename>archive.N</filename></para></entry>
<entry align="left" valign="top"><para>Volumes of performance metrics values,
for <filename>N</filename> = 0,1,2,...</para></entry></row></tbody></tgroup>
</table>
</section>
<section>
<title>Log Volumes</title>
<para><indexterm><primary>log volumes</primary></indexterm>A single PCP archive
may be partitioned into a number of volumes. These volumes may expedite management
of the archive; however, the metadata file and at least one volume must be
present before a PCP tool can process the archive.</para>
<para>You can control the size of an archive log volume by using the <literal>
-v</literal> command line option to <command>pmlogger</command>. This option
specifies how large a volume should become before <command>pmlogger</command>
starts a new volume. Archive log volumes retain the same base filename as
other files in the archive log, and are differentiated by a numeric suffix
that is incremented with each volume change. For example, you might have a
log volume sequence that looks like this:</para>
<literallayout>netserver.log.0
netserver.log.1
netserver.log.2</literallayout>
<para><indexterm><primary>SIGHUP signal</primary></indexterm><indexterm><primary>
pmlc tool</primary><secondary>SIGHUP signal</secondary></indexterm>You can
also cause an existing log to be closed and a new one to be opened by sending
a <literal>SIGHUP</literal> signal to <command>pmlogger</command>, or by using
the <command>pmlc</command> command to change the <command>pmlogger</command>
instructions dynamically, without interrupting <command>pmlogger</command>
operation. Complete information on log volumes is found in the <command sectionref="1">
pmlogger</command> man page.</para>
</section><![ %UAG; [<section>
<title>Basenames for Managed Archive Log Files</title>
<para>The PCP archive management tools support a consistent scheme for selecting
the basenames for the files in a collection of archives and for mapping these
files to a suitable directory hierarchy.</para>
<para>Once configured, the PCP tools that manage archive logs employ a consistent
scheme for selecting the basename for an archive each time <command>pmlogger
</command> is launched, namely the current date and time in the format YYYYMMDD.HH.MM.
Typically, at the end of each day, all archives for a particular host on that
day would be merged to produce a single archive with a basename constructed
from the date, namely YYYYMMDD. The <literal>pmlogger_daily</literal> script
performs this action and a number of other routine housekeeping chores.</para>
</section>]]><![ %UAG; [<section>
<title>Directory Organization for Archive Log Files</title>
<para>If you are using a deployment of PCP tools and daemons to collect metrics
from a variety of hosts and storing them all at a central location, you should
develop an organized strategy for storing and naming your log files.</para>
<note><para><indexterm><primary>pmchart tool</primary><secondary>short-term
executions</secondary></indexterm>There are many possible configurations of <command>
pmlogger</command>, as described in <xref linkend="LE56598-PARENT">. The directory
organization described in this section is recommended for any system on which <command>
pmlogger</command> is configured for permanent execution (as opposed to short-term
executions, for example, as launched from <command>pmchart</command> to record
some performance data of current interest).</para>
</note>
<para>Typically, the IRIX filesystem structure can be used to reflect the
number of hosts for which a <command>pmlogger</command> instance is expected
to be running locally, obviating the need for lengthy and cumbersome filenames.
It makes considerable sense to place all logs for a particular host in a separate
directory named after that host. Because each instance of <command>pmlogger
</command> can only log metrics fetched from a single host, this also simplifies
some of the archive log management and administration tasks.</para>
<para>For example, consider the filesystem and naming structure shown in <xref
linkend="LE22838-TITLE">.</para>
<figure width="wide">
<graphic entityref="a12222" scale="NO"></graphic>
<title id="LE22838-TITLE">Archive Log Directory Structure</title>
</figure>
<para><indexterm><primary>/var/pcp/config/pmlogger/control file</primary>
</indexterm>The specification of where to place the archive log files for
particular <command>pmlogger</command> instances is encoded in the configuration
file <filename><?Pub _nolinebreak>/var/pcp/config/pmlogger/control<?Pub /_nolinebreak></filename>,
and this file should be customized on each host running an instance of <command>
pmlogger</command>.</para>
<para>If many archives are being created, and the associated PCP collector
systems form peer classes based upon service type (for example, Web servers,
DBMS servers, NFS servers, and so on), then it may be appropriate to introduce
another layer into the directory structure, or use symbolic links to group
together hosts providing similar service types.</para>
</section>]]>
<section>
<title>Configuration of <command>pmlogger</command></title>
<para><indexterm><primary>pmlogger tool</primary><secondary>configuration
</secondary></indexterm>The configuration files used by <command>pmlogger
</command> describe which metrics are to be logged. Groups of metrics may
be logged at different intervals to other groups of metrics. Two states, mandatory
and advisory, also apply to each group of metrics, defining whether metrics
definitely should be logged or not logged, or whether a later advisory definition
may change that state.</para>
<para>The mandatory state takes precedence if it is <literal>on</literal>
or <literal>off</literal>, causing any subsequent request for a change in
advisory state to have no effect. If the mandatory state is <literal>maybe
</literal>, then the advisory state determines if logging is enabled or not.
</para>
<para>The mandatory states are <literal>on</literal>, <literal>off</literal>,
and <literal>maybe</literal>. The advisory states, which only affect metrics
that are mandatory <literal>maybe</literal>, are <literal>on</literal> and <literal>
off</literal>. Therefore, a metric that is mandatory <literal>maybe</literal>
in one definition and advisory <literal>on</literal> in another definition
would be logged at the advisory interval. Metrics that are not specified in
the <command>pmlogger</command> configuration file are mandatory <literal>
maybe</literal> and advisory <literal>off</literal> by default and are not
logged.</para>
<para>A complete description of the <command>pmlogger</command> configuration
format can be found on the <command sectionref="1">pmlogger</command> man
page.</para>
</section>
<section>
<title>PCP Archive Contents</title>
<para><indexterm><primary>archive logs</primary><secondary>contents</secondary>
</indexterm><indexterm><primary>pmdumplog tool</primary><secondary>archive
log contents</secondary></indexterm>Once a PCP archive log has been created,
the <command>pmdumplog</command> utility may be used to display various information
about the contents of the archive. For example, start with the following command:
</para>
<para><literal>pmdumplog -l /var/adm/pcplog/www.sgi.com/960731</literal></para>
<para>It might produce the following output:</para>
<literallayout>Log Label (Log Format Version 1)
Performance metrics from host www.sgi.com
     commencing Wed Jul 31 00:16:34.941 1996
     ending     Thu Aug  1 00:18:01.468 1996</literallayout>
<para>The simplest way to discover what performance metrics are contained
within an archive is to use <literal>pminfo</literal> as shown in <xref linkend="Z984165727sdc">:
</para>
<example id="Z984165598sdc"><title id="Z984165727sdc">Using <literal>pminfo
</literal> to Obtain Archive Information</title>
<literallayout><literal>pminfo -a /var/adm/pcplog/www.sgi.com/960731 network.mbuf
</literal>
network.mbuf.alloc 
network.mbuf.typealloc
network.mbuf.clustalloc
network.mbuf.clustfree
network.mbuf.failed
network.mbuf.waited
network.mbuf.drained</literallayout>
</example>
</section>
</section>
</section>
<section id="LE57424-PARENT">
<title id="LE57424-TITLE">Cookbook for Archive Logging</title>
<para><indexterm><primary>cookbook</primary></indexterm><indexterm><primary>
pmlogger tool</primary><secondary>cookbook tasks</secondary></indexterm>The
following sections present a checklist of tasks that may be performed to enable
PCP archive logging with minimal effort. For a complete explanation, refer
to the other sections in this chapter and the man pages for <command>pmlogger
</command> and related tools.</para>
<section>
<title>Primary Logger</title>
<para><indexterm><primary>primary archive</primary></indexterm>Assume you
wish to activate primary archive logging on the PCP collector host <literal>
pluto</literal>. Execute all of the following tasks while logged into <literal>
pluto</literal> as the superuser (<literal>root</literal>).</para>
<orderedlist><listitem><para>Create the directory to hold the archive logs:
</para>
<literallayout><userinput>mkdir /var/log/pcp/pmlogger/pluto</userinput></literallayout>
</listitem><listitem><para>Choose a suitable <command>pmlogger</command> configuration
file. Here are some examples:</para>
<itemizedlist>
<listitem><para><indexterm><primary>/var/pcp/config/pmlogger/config.default
file</primary></indexterm>The default configuration: <filename><?Pub _nolinebreak>/var/pcp/config/pmlogger/config.default.<?Pub /_nolinebreak></filename></para>
</listitem>
<listitem><para><indexterm><primary>dkvis tool</primary><secondary>summary
configuration</secondary></indexterm><indexterm><primary>mpvis tool</primary>
<secondary>summary configuration</secondary></indexterm><indexterm><primary>
pmkstat tool</primary><secondary>summary configuration</secondary></indexterm><indexterm>
<primary>nfsvis tool</primary><secondary>summary configuration</secondary>
</indexterm>A broad summary configuration, sufficient to be used with <command>
dkvis</command>, <command>mpvis</command>, <command>nfsvis</command>, and <command>
pmkstat</command>: <filename>/var/pcp/config/pmlogger/config.Summary.</filename></para>
</listitem>
<listitem><para><indexterm><primary>config.* files</primary></indexterm><indexterm>
<primary>/var/pcp/config/pmlogger file</primary></indexterm><indexterm><primary>
pmchart tool</primary><secondary>config.* files</secondary></indexterm>One
of the other <filename>config.*</filename> files in the <filename>/var/pcp/config/pmlogger
</filename> directory, tailored for an application, a PCP add-on product,
a <command>pmchart</command> view, or a PCP monitor tool.</para>
<para><indexterm><primary>/var/adm/pcplog/pluto/config.default file</primary>
</indexterm>Copy the chosen configuration file to <filename>/var/log/pcp/pmlogger/pluto/config.default
</filename> (possibly after some customization).</para>
</listitem></itemizedlist>
</listitem><listitem><para><indexterm><primary>/var/pcp/config/pmlogger/control
file</primary></indexterm>Edit <filename>/var/pcp/config/pmlogger/control
</filename>. Using the line for the &ldquo;local primary logger&rdquo; as
a template, add the following line to the file:</para>
<literallayout><userinput>pluto  y  n  /var/log/pcp/pmlogger/pluto  -c config.default
</userinput>&ensp;</literallayout>
</listitem><listitem><para>Make sure PMCD and <command>pmlogger</command>
are enabled and running:</para>
<literallayout><userinput>chkconfig pmcd on</userinput>
<userinput>chkconfig pmlogger on</userinput>
<userinput>/etc/rc.d/init.d/pcp start</userinput>
Performance Co-Pilot PMCD started (logfile is .... /pmcd.log)
Performance Co-Pilot Primary Logger started</literallayout>
</listitem><listitem><para>Verify that the primary <command>pmlogger</command>
instance is running:</para>
<literallayout width="wide"><userinput>pmlc</userinput>
pmlc> <userinput>connect primary</userinput>
pmlc> <userinput>status</userinput>
pmlogger [primary] on host pluto is logging metrics from host pluto
log started      Thu Aug  8 14:33:01 2002 (times in local time)
last log entry   Thu Aug  8 14:34:11 2002
current time     Thu Aug  8 14:36:54 2002
log volume       0
log size         284</literallayout>
</listitem><listitem><para>Verify that the archive files are being created
in the correct place:</para>
<literallayout><userinput>ls /var/log/pcp/pmlogger/pluto</userinput>
960808.14.33.0 
960808.14.33.index
960808.14.33.meta
Latest
pmlogger.log</literallayout>
</listitem></orderedlist>
</section>
<section>
<title>Other Logger Configurations</title>
<para>Assume you wish to create archive logs on the local host for performance
metrics collected from the remote host <literal>bert</literal>. Execute all
of the following tasks while logged into the local host as the superuser (<literal>
root</literal>).</para>
<procedure><title id="Z982886800sdc">Creating Archive Logs</title>
<orderedlist><listitem><para>Create the directory to hold the archive logs:
</para>
<literallayout><userinput>mkdir /var/log/pcp/pmlogger/bert</userinput>&ensp;
</literallayout>
</listitem><listitem><para>Choose a suitable <command>pmlogger</command> configuration
file. Here are three examples:</para>
<itemizedlist>
<listitem><para><indexterm><primary>/var/pcp/config/pmlogger/config.default
file</primary></indexterm>The default configuration: <filename><?Pub _nolinebreak>/var/pcp/config/pmlogger/config.default.<?Pub /_nolinebreak></filename></para>
</listitem>
<listitem><para><indexterm><primary>dkvis tool</primary><secondary>summary
configuration</secondary></indexterm><indexterm><primary>mpvis tool</primary>
<secondary>summary configuration</secondary></indexterm><indexterm><primary>
pmkstat tool</primary><secondary>summary configuration</secondary></indexterm><indexterm>
<primary>nfsvis tool</primary><secondary>summary configuration</secondary>
</indexterm>A broad summary configuration, sufficient to be used with <command>
dkvis</command>, <command>mpvis</command>, <command>nfsvis</command>, and <command>
pmkstat</command>: <filename>/var/pcp/config/pmlogger/config.Summary.</filename></para>
</listitem>
<listitem><para><indexterm><primary>/var/pcp/config/pmlogger directory</primary>
</indexterm><indexterm><primary>pmview tool</primary><secondary>config.* files
</secondary></indexterm>One of the other <filename>config.*</filename> files
in the <filename>/var/pcp/config/pmlogger</filename> directory, tailored for
an application, a PCP add-on product, a <command>pmchart</command> view, or
a PCP monitor tool.</para>
<para>Copy the chosen configuration file to <filename>/var/log/pcp/pmlogger/<?Pub _nolinebreak>config.default<?Pub /_nolinebreak></filename>
(possibly after some customization).</para>
</listitem></itemizedlist>
</listitem><listitem><para>Edit <filename>/var/pcp/config/pmlogger/control.
</filename> Using the line for <literal>remote</literal> as a template, add
the following line to the file:</para>
<literallayout><userinput>bert  n  n  /var/log/pcp/pmlogger/bert  -c ./config.default
</userinput></literallayout>
</listitem><listitem><para>Start <command>pmlogger</command>:</para>
<literallayout><userinput>/usr/share/pcp/bin/pmlogger_check</userinput>
Restarting pmlogger for host "bert" ..... done</literallayout>
</listitem><listitem><para>Verify that the <command>pmlogger</command> instance
is running:</para>
<literallayout format="yes"><userinput>pmlc</userinput>
pmlc> <userinput>show loggers</userinput>
The following pmloggers are running on bert:
        primary (19144)
pmlc> <userinput>connect 19144</userinput>
pmlc> <userinput>status</userinput>
pmlogger [19144] on host ernie is logging metrics from host bert
log started      Thu Aug  8 10:10:10 2002 (times in local time)
last log entry   Thu Aug  8 14:50:54 2002
current time     Thu Aug  8 14:55:48 2002
log volume       0
log size         256</literallayout>
</listitem></orderedlist>
</procedure>
<para>To create archive logs on the local host for performance metrics collected
from multiple remote hosts, repeat the steps in <xref linkend="Z982886800sdc">
for each remote host.</para>
</section>
<section>
<title>Archive Log Administration</title>
<para><indexterm><primary>archive logs</primary><secondary>administration
</secondary></indexterm>Assume the local host has been set up to create archive
logs of performance metrics collected from one or more hosts (which may be
either the local host or a remote host).</para>
<para>To activate the maintenance and housekeeping scripts for a collection
of archive logs, execute the following tasks while logged into the local host
as the superuser (<literal>root</literal>):</para>
<orderedlist><listitem><para>Augment the <filename>crontab</filename> file
for <literal>root</literal>. For example:</para>
<literallayout><userinput>crontab -l >/tmp/foo</userinput></literallayout>
</listitem><listitem><para>Edit <filename>/tmp/foo</filename>, adding lines
similar to those from <filename><?Pub _nolinebreak>/var/pcp/config/pmlogger/crontab<?Pub /_nolinebreak></filename>
for <literal>pmlogger_daily</literal> and <literal>pmlogger_check</literal>;
for example:</para>
<literallayout># daily processing of archive logs
10     0     *     *     *    /usr/share/pcp/bin/pmlogger_daily
# every 30 minutes, check pmlogger instances are running
25,55  *     *     *     *    /usr/share/pcp/bin/pmlogger_check</literallayout>
</listitem><listitem><para>Make these changes permanent with this command:
</para>
<literallayout><userinput>crontab &lt;/tmp/foo</userinput></literallayout>
</listitem></orderedlist>
</section>
</section>
<section id="Z930642977sdc">
<title>Other Archive Logging Features and Services</title>
<para>Other archive logging features and services include PCP archive folios,
manipulating archive logs, primary logger, and using <command>pmlc</command>.
</para>
<section id="LE73509-PARENT">
<title id="LE73509-TITLE">PCP  Archive Folios</title>
<para><indexterm id="ITch07-9"><primary>folios</primary></indexterm><indexterm>
<primary>archive logs</primary><secondary>folios</secondary></indexterm><indexterm>
<primary>pmchart tool</primary><secondary>record mode</secondary></indexterm><indexterm>
<primary>pmview tool</primary><secondary>record mode</secondary></indexterm>A
collection of one or more PCP archive logs may be combined with a control
file to produce a PCP archive folio. Archive folios are created using either <literal>
mkaf</literal> or the interactive record mode services of various PCP GUI
monitoring tools.</para>
<para><indexterm><primary>pmlogger tool</primary><secondary>folios</secondary>
</indexterm>The automated archive log management services also create an archive
folio named <filename>Latest</filename> for each managed <command>pmlogger
</command> instance, to provide a symbolic name to the most recent archive
log. With reference to <xref linkend="LE22838-TITLE">, this would mean the
creation of the folios <filename>/var/log/pcp/pmlogger/one/Latest</filename>
and <filename>/var/log/pcp/pmlogger/two/Latest</filename>.</para>
<para><indexterm><primary>pmafm tool</primary><secondary>interactive commands
</secondary></indexterm>The <command>pmafm</command> utility is completely
described in the <command sectionref="1">pmafm</command> man page, and provides
the interactive commands (single commands may also be executed from the command
line) for the following services:</para>
<itemizedlist>
<listitem><para>Checking the integrity of the archives in the folio.</para>
</listitem>
<listitem><para>Displaying information about the component archives.</para>
</listitem>
<listitem><para>Executing PCP tools with their source of performance metrics
assigned concurrently to all of the component archives (where the tool supports
this), or serially executing the PCP tool once per component archive.</para>
</listitem>
<listitem><para>If the folio was created by a single PCP monitoring tool,
replaying all of the archives in the folio with that monitoring tool.</para>
</listitem>
<listitem><para>Restricting the processing to particular archives, or the
archives associated with particular hosts.</para>
</listitem></itemizedlist>
</section>
<section>
<title>Manipulating Archive Logs with <command>pmlogextract</command></title>
<para><indexterm id="ITch07-10"><primary>pmlogextract tool</primary></indexterm>
The <literal>pmlogextract</literal> tool takes a number of PCP archive logs
from a single host and performs the following tasks:</para>
<itemizedlist>
<listitem><para>Merges the archives into a single log, while maintaining the
correct time stamps for all values.</para>
</listitem>
<listitem><para>Extracts all metric values within a temporal window that could
encompass several archive logs.</para>
</listitem>
<listitem><para>Extracts only a configurable subset of metrics from the archive
logs.</para>
</listitem></itemizedlist>
<para>See the <command sectionref="1">pmlogextract</command> man page for
full information on this command. It replaces functionality of the <literal>
pmlogmerge</literal> tool as of PCP release 2.0.<indexterm id="ITch07-12">
<primary>pmlogmerge tool</primary></indexterm></para>
</section>
<section>
<title>Primary Logger</title>
<para><indexterm id="ITch07-14"><primary>primary logger</primary></indexterm><indexterm
id="ITch07-16"><primary>pmlogger tool</primary><secondary>primary instance
</secondary></indexterm>On each system for which PMCD is active (each PCP
collector system), there is an option to have a distinguished instance of
the archive logger <command>pmlogger</command> (the &ldquo;primary&rdquo;
logger) launched each time PMCD is started. This may be used to ensure the
creation of minimalist archive logs required for ongoing system management
and capacity planning in the event of failure of a system where a remote <command>
pmlogger</command> may be running, or because the preferred archive logger
deployment is to activate <command>pmlogger</command> on each PCP collector
system.</para>
<para>Run the following command as superuser on each PCP collector system
where you want to activate the primary <command>pmlogger</command>:</para>
<literallayout><userinput>chkconfig pmlogger on</userinput></literallayout>
<para>The primary logger launches the next time PMCD is started. If you wish
this to happen immediately, follow up with this command:</para>
<literallayout><userinput>/etc/rc.d/init.d/pcp start</userinput></literallayout>
<para><indexterm><primary>/etc/config/pmlogger.options file</primary></indexterm><indexterm>
<primary>/var/pcp/config/pmlogger/config.default file</primary></indexterm>When
it is started in this fashion, the <filename>/etc/config/pmlogger.options
</filename> file provides command line options for <command>pmlogger</command>.
In the default setup, this in turn means that the initial logging state and
configuration is specified in the file <filename><?Pub _nolinebreak>/var/pcp/config/pmlogger/config.default<?Pub /_nolinebreak></filename>.
Either one or both of these files may be modified to tailor <command>pmlogger
</command> operation to the local requirements.</para>
</section>
<section>
<title>Using <command>pmlc</command></title>
<para><indexterm><primary>pmlogger tool</primary><secondary>configuration
</secondary></indexterm><indexterm id="ITch07-17"><primary>pmlc tool</primary>
<secondary>description</secondary></indexterm>You may tailor <command>pmlogger
</command> dynamically with the <command>pmlc</command> command. Normally,
the <command>pmlogger</command> configuration is read at startup. If you choose
to modify the <filename>config</filename> file to change the parameters under
which <command>pmlogger</command> operates, you must stop and restart the
program for your changes to have effect. Alternatively, you may change parameters
whenever required by using the <command>pmlc</command> interface.</para>
<para>To run the <command>pmlc</command> tool, enter:</para>
<literallayout><userinput>pmlc</userinput></literallayout>
<para>By default, <command>pmlc</command> acts on the primary instance of <command>
pmlogger</command> on the current host. See the <command sectionref="1">pmlc
</command> man page for a description of command line options. When it is
invoked, <command>pmlc</command> presents you with a prompt:</para>
<literallayout>pmlc> </literallayout>
<para>You may obtain a listing of the available commands by entering a question
mark (?) and pressing <keycap>Enter</keycap>. You see output similar to that
in <xref linkend="Z984165824sdc">:</para>
<example id="Z984165791sdc"><title id="Z984165824sdc">Listing Available Commands
</title>
<literallayout width="wide" format="yes">     show loggers [@&lt;host>]           display &lt;pid>s of running pmloggers
     connect _logger_id [@&lt;host>]     connect to designated pmlogger
     status                           information about connected pmlogger
     query metric-list                show logging state of metrics
     new volume                       start a new log volume
     flush                            flush the log buffers to disk
     log { mandatory | advisory } on &lt;interval> _metric-list
     log { mandatory | advisory } off _metric-list
     log mandatory maybe _metric-list
     timezone local|logger|'&lt;timezone>' change reporting timezone
     help                               print this help message
     quit                               exit from pmlc
     _logger_id   is  primary | &lt;pid> | port &lt;n>
     _metric-list is  _metric-spec | { _metric-spec ... }
     _metric-spec is  &lt;metric-name> | &lt;metric-name> [ &lt;instance> ... ]
</literallayout>
<para>Here is an example:</para>
<literallayout><userinput>pmlc</userinput>
pmlc> <userinput>show loggers @babylon</userinput>
The following pmloggers are running on babylon:
       primary (1892)
pmlc> <userinput>connect 1892 @babylon</userinput>
pmlc> <userinput>log advisory on 2 secs disk.dev.read</userinput>
pmlc> <userinput>query disk.dev</userinput>
disk.dev.read
       adv  on  nl       5 min  [131073 or &ldquo;dks0d1&rdquo;]
       adv  on  nl       5 min  [131074 or &ldquo;dks0d2&rdquo;]
pmlc> <userinput>quit</userinput></literallayout>
</example>
<note><para>Any changes to the set of logged metrics made via <command>pmlc
</command> are not saved, and are lost the next time <command>pmlogger</command>
is started with the same configuration file. Permanent changes are made by
modifying the <command>pmlogger</command> configuration file(s).</para>
</note>
<para>Refer to the <command sectionref="1">pmlc</command> and <command sectionref="1">
pmlogger</command> man pages for complete details.</para>
</section>
</section>
<section id="LE80113-PARENT">
<title id="LE80113-TITLE">Archive Logging Troubleshooting</title>
<para><indexterm id="ITch07-19"><primary>troubleshooting</primary><secondary>
archive logging</secondary></indexterm><indexterm><primary>archive logs</primary>
<secondary>troubleshooting</secondary></indexterm><indexterm><primary>pmlogger
tool</primary><secondary>troubleshooting</secondary></indexterm>The following
issues concern the creation and use of logs using <command>pmlogger</command>.
</para>
<section>
<title><command>pmlogger</command> Cannot Write Log</title>
<deflist>
<deflistentry>
<term>Symptom:</term>
<listitem><para>The <command>pmlogger</command> utility does not start, and
you see this message:</para>
<literallayout width="wide"><literal>_pmLogNewFile: &ldquo;foo.index&rdquo; already exists, not over-written
</literal></literallayout>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>Archive logs are considered sufficiently precious that <command>
pmlogger</command> does not empty or overwrite an existing set of archive
log files. The log named <filename>foo</filename> actually consists of the
physical file <filename>foo.index</filename>, <filename>foo.meta</filename>,
and at least one file <filename>foo.N</filename>, where <filename>N</filename>
is in the range 0, 1, 2, 3, and so on.</para>
<para>A message similar to the one above is produced when a new <command>
pmlogger</command> instance encounters one of these files already in existence.
</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para>If you are sure, remove all of the parts of the archive log.
For example, use the following command:<literallayout><userinput>rm -f foo.*
</userinput></literallayout></para>
<para>Then rerun <command>pmlogger</command>.</para>
</listitem></deflistentry>
</deflist>
</section>
<section>
<title>Cannot Find Log</title>
<deflist>
<deflistentry>
<term>Symptom:</term>
<listitem><para><indexterm id="ITch07-23"><primary>pmdumplog tool</primary>
<secondary>troubleshooting</secondary></indexterm>The <literal>pmdumplog</literal>
utility, or any tool that can read an archive log, displays this message:
</para>
<literallayout width="wide"><literal>Cannot open archive mylog: No such file or directory
</literal></literallayout>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>An archive consists of at least three physical files. If the
base name for the archive is <filename>mylog</filename>, then the archive
actually consists of the physical files <filename>mylog.index</filename>, <filename>
mylog.meta</filename>, and at least one file<filename>&ensp;mylog.N</filename>,
where <filename>N</filename> is in the range 0, 1, 2, 3, and so on.</para>
<para>The above message is produced if one or more of the files is missing.
</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para>Use this command to check which files the utility is trying
to open:</para>
<para><literallayout><userinput>ls mylog.*</userinput></literallayout></para>
<para>Turn on the internal debug flag <literal>DBG_TRACE_LOG</literal> (<literal>
-D</literal> 128) to see which files are being inspected by the <literal>
_pmOpenLog</literal> routine as shown in the following example:<literallayout><userinput>
pmdumplog -D 128 -l mylog</userinput></literallayout></para>
<para>Locate the missing files and move them all to the same directory, or
remove all of the files that are part of the archive, and recreate the archive
log.</para>
</listitem></deflistentry>
</deflist>
</section>
<?Pub _newpage>
<section>
<title>Primary <command>pmlogger</command> Cannot Start</title>
<deflist>
<deflistentry>
<term>Symptom:</term>
<listitem><para>The primary <command>pmlogger</command> cannot be started.
A message like the following appears:</para>
<literallayout width="wide"><literal>pmlogger: there is already a primary pmlogger running
</literal></literallayout>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>There is either a primary <command>pmlogger</command> already
running, or the previous primary <command>pmlogger</command> was terminated
unexpectedly before it could perform its cleanup operations.</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para><indexterm><primary>show command</primary></indexterm><indexterm>
<primary>pmlc tool</primary><secondary>show command</secondary></indexterm><indexterm>
<primary>SIGINT signal</primary></indexterm><indexterm><primary>kill command
</primary></indexterm>If there is already a primary <command>pmlogger</command>
running and you wish to replace it with a new <command>pmlogger</command>,
use the <literal>show</literal> command in <command>pmlc</command> to determine
the process ID of the primary <command>pmlogger</command>. The process ID
of the primary <command>pmlogger</command> appears in parentheses after the
word &ldquo;primary.&rdquo; Send an <literal>SIGINT</literal> signal to the
process to shut it down (use the <command>kill</command> command). If the
process does not exist, proceed to the manual cleanup described in the paragraph
below. If the process did exist, it should now be possible to start the new <command>
pmlogger</command>.</para>
<para>If <command>pmlc</command>'s <command>show</command> command displays
a process ID for a process that does not exist, a <command>pmlogger</command>
process was terminated before it could clean up. If it was the primary <command>
pmlogger</command>, the corresponding control files must be removed before
one can start a new primary <command>pmlogger</command>. It is a good idea
to clean up any spurious control files even if they are not for the primary <command>
pmlogger</command>.</para>
<para><indexterm><primary>/var/tmp/pmlogger file</primary></indexterm>The
control files are kept in <filename>/var/tmp/pmlogger</filename>. A control
file with the process ID of the <command>pmlogger</command> as its name is
created when the <command>pmlogger</command> is started. In addition, the
primary <command>pmlogger</command> creates a symbolic link named <literal>
primary</literal> to its control file.</para>
<para>For the primary <command>pmlogger</command>, remove both the symbolic
link and the file (corresponding to its process ID) to which the link points.
For other <command>pmlogger</command>s, remove just the process ID file. Do
not remove any other files in the directory. If the control file for an active <command>
pmlogger</command> is removed, <command>pmlc</command> is not able to contact
it.</para>
</listitem></deflistentry>
</deflist>
</section>
<section>
<title>Identifying an Active <command>pmlogger</command> Process</title>
<deflist>
<deflistentry>
<term>Symptom:</term>
<listitem><para><indexterm><primary>active pmlogger process</primary></indexterm>You
have a PCP archive log that is demonstrably growing, but do not know the identify
of the associated <command>pmlogger</command> process.</para>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>The PID is not obvious from the log, or the archive name may
not be obvious from the output of the <command>ps</command> command.</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para>If the archive basename is <filename>foo</filename>, run the
following commands:</para>
<literallayout width="wide"><userinput>pmdumplog -l foo</userinput>
<literal>Log Label (Log Format Version 1)</literal>
Performance metrics from host gonzo 
     commencing Wed Aug  7 00:10:09.214 1996 
     ending     Wed Aug  7 16:10:09.155 1996 
<userinput>pminfo -a foo -f pmcd.pmlogger</userinput>&ensp;
pmcd.pmlogger.host
     inst [10728 or "10728"] value "gonzo.melbourne.sgi.com"
pmcd.pmlogger.port
     inst [10728 or "10728"] value 4331
pmcd.pmlogger.archive
     inst [10728 or "10728"] value "<replaceable>/usr/var/adm/pcplog/gonzo/foo
</replaceable>"</literallayout>
<para>All of the information describing the creator of the archive is revealed
and, in particular, the instance identifier for the PMCD metrics (<literal>
10728</literal> in the example above) is the PID of the <command>pmlogger
</command> instance, which may be used to control the process via <command>
pmlc</command>.</para>
</listitem></deflistentry>
</deflist>
</section>
<section>
<title>Illegal Label Record</title>
<deflist>
<deflistentry>
<term>Symptom:</term>
<listitem><para><indexterm><primary>illegal label record</primary></indexterm>PCP
tools report:</para>
<literallayout width="wide">Illegal label record at start of PCP archive log file.
</literallayout>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>Either you are attempting to read a Version 2 archive with
a PCP 1.<replaceable>x</replaceable> tool, or the archive log has become corrupted.
</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para>By default, <command>pmlogger</command> in PCP release 2.0
and later generates Version 2 archives that PCP 1.0 to 1.3 tools cannot interpret.
If you must use older tools, pass the <literal>-V 1</literal> option to <command>
pmlogger</command>, forcing it to generate Version 1 archives.</para>
<para>If the PCP tools are from PCP release 2.0 or later, then the archive
log may have been corrupted, which can be verified using <command>pmlogcheck
</command>. Refer to the <command sectionref="1">pmlogcheck</command> man
page.</para>
</listitem></deflistentry>
</deflist>
</section>
<section>
<title>Empty Archive Log Files or <command>pmlogger</command> Exits Immediately
</title>
<deflist id="Z930351569sdc">
<deflistentry>
<term>Symptom:</term>
<listitem><para>Archive log files are zero size, requested metrics are not
being logged, or <command>pmlogger</command> exits immediately with no error
messages.</para>
</listitem></deflistentry>
<deflistentry>
<term>Cause:</term>
<listitem><para>Either <command>pmlogger</command> encountered errors in the
configuration file or has not flushed its output buffers yet or some (or all)
metrics specified in the <command>pmlogger</command> configuration file have
had their state changed to advisory <literal>off</literal> or mandatory <literal>
off</literal> via <command>pmlc</command>. It is also possible that the logging
interval specified in the <command>pmlogger</command> configuration file for
some or all of the metrics is longer than the period of time you have been
waiting since <command>pmlogger</command> started.</para>
</listitem></deflistentry>
<deflistentry>
<term>Resolution:</term>
<listitem><para>If <command>pmlogger</command> exits immediately with no error
messages, check the <filename>pmlogger.log</filename> file in the directory <command>
pmlogger</command> was started in for any error messages. If <command>pmlogger
</command> has not yet flushed its buffers, enter the following command:<literallayout>
killall -SIGUSR1 pmlogger</literallayout></para>
<para>Otherwise, use the <literal>status</literal> command for <command>pmlc
</command> to interrogate the internal <command>pmlogger</command> state of
specific metrics.</para>
</listitem></deflistentry>
</deflist>
</section>
</section>
</chapter>
<?Pub *0000059005>
