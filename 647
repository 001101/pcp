#! /bin/sh
# PCP QA Test No. 647
# Install/Remove for Memory Mapped Value PMDA
#
# Copyright (c) 2009 Aconex.  All Rights Reserved.
#
# creator
owner=nathans

seq=`basename $0`
echo "QA output created by $seq"

# get standard filters
. ./common.product
. ./common.check
. ./common.filter

tmp=/tmp/$$
status=1
done_clean=false
MMV_STATS_DIR="$PCP_TMP_DIR/mmv"

_cleanup()
{
    if $done_clean
    then
	:
    else
	[ -f $tmp.pmcd.conf ] && $here/sudo mv $tmp.pmcd.conf $PCP_PMCDCONF_PATH
	[ -d $tmp.mmv.dir ] && rm -fr "$MMV_STATS_DIR"
	[ -d $tmp.mmv.dir ] && $here/sudo mv $tmp.mmv.dir $MMV_STATS_DIR
	rm -f $tmp.*
	$here/sudo $PCP_RC_DIR/pcp start | _filter_pcp_start
	_wait_for_pmcd
	_wait_for_pmlogger
	done_clean=true
    fi
    exit $status
}

trap "_cleanup" 0 1 2 3 15

_filter_mmv_values()
{
    sed -e \
	's/"eggs"\] value .*/"eggs"] value USEC/g'
}

_delay_for_pmns()
{
    sleep 2		# remove all this with new PMNS PDU types
    pminfo -df $iam >/dev/null 2>&1	# get past ready/notready
    sleep 3		# give pmcd some time to rebuild the pmns
}

# real QA test starts here
here=`pwd`
home="$PCP_PMDAS_DIR"
iam=mmv
if [ ! -d "$home/$iam" ]
then
    echo "Where is $home/$iam?"
    exit 1
fi
cd "$home/$iam"
unset ROOT

# copy the pmcd config file to restore state later.
cp $PCP_PMCDCONF_PATH "$tmp.pmcd.conf"
# move the MMV directory to restore contents later.
[ -d $MMV_STATS_DIR ] && $here/sudo mv -f $MMV_STATS_DIR $tmp.mmv.dir

# start from a known starting point
$here/sudo ./Remove >/dev/null 2>&1

mkdir "$MMV_STATS_DIR"
chmod 1777 "$MMV_STATS_DIR"

echo
echo "=== $iam agent installation ==="
$here/sudo ./Install </dev/null >$tmp.out 2>&1
_filter_pmda_install <$tmp.out

$here/src-oss/mmv_genstats
_delay_for_pmns

echo
echo "=== validate values ==="
if pminfo -fdmtT $iam | _filter_mmv_values
then
     :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi

echo
echo "=== remove $iam agent ==="
$here/sudo ./Remove >$tmp.out 2>&1
_filter_pmda_remove <$tmp.out

status=0
exit
