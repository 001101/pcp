Known Bugs and TODO List
========================

kmchart and kmtime are replacements for SGI's pmchart and pmtime.
kmchart is designed to produce stripcharts from Performance Co-Pilot (PCP)
performance metrics fetched from either a live source (one or more hosts)
or from one or more PCP archives.  kmtime is a graphical time controller
utility that coordinates time updates and VCR-like playback for other
utilities, such as kmchart and pmval.

The SGI documentation for PCP tools in general is here
http://techpubs.sgi.com/library/tpl/cgi-bin/browse.cgi?\
    coll=0650&db=bks&cmd=toc&pth=/SGI_Admin/PCP_UAG
and, in particular, pmchart is documented in Chapter 4.
Further information can be gleaned from the pmchart man page at
http://techpubs.sgi.com/library/tpl/cgi-bin/getdoc.cgi?\
    coll=linux&db=man&fname=/usr/share/catman/man1/pmchart.1.html

Building kmchart

    Refer to ./INSTALL

Running kmchart

    At this stage, kmchart is only being made available as source
    code, so you'll need to build it from source first.

TODO

    Refer to the TODO comments in the source code, else run
    tools/what-todo for the full chapter and verse details.

    kmchart TODO list:
    - No values available is not the same as zero! (plots need to display
      broken lines - see Qwt mailing list post)
    - QT4 issues:
	- Metric selection lists are still quite hosed
	- Settings dialog is busted wrt Styles
    - QWT5 issues:
      o All uses of qwt counters/sliders need to be replaced since
	they dont follow style at all (look awful).  QT4 has a double
	spinbox to replace the counter (done), but sliders will need
	to be built on top of the integer based one (mouse movement is
	in pixels anyway, so... just need to divy up the double range
	and need to track slider pixel width to do so, of course)
    - Unified time axis, still to do:
      o Scaling of the tick marks on the Y-axis is not yet correct,
	and causes mis-alignment on the unified X-axis.  The disk
	throughput (bytes) show this up clearly, for example.
      o Respond to changes in the sampling interval from kmtime.
      o Resolve what to do about plot legends
	. Better to have them at the top of the chart below title?
	. Would be good to get rid of the pushbutton shading around
	  each, and instead rely solely on the Box<->Line transition
	  to show state (i.e. plot displayed or not).
	. Probably need to take QwtLegend and modify it alot...?
	. Plot labels (displayed in legend, supported in the kmchart
	  View file format) need to be supported in the New/Edit
	  Chart dialog - need to preserve existing ones, and need to
	  be able to create/modify existing labels.
    - Live mode stop/start doesn't quite work right (there's a TODO in
      the chart.cpp code) - on stop, the last observed value is plotted
      for all time points (on start it rectifies itself).
    - Destructors and memory leak plugging
    - Online Help support
    - Incorporate a Tutorial into online Help
    - Tooltips need to be added across the board.
    - Timezone support not completely working
    - Auto-update the version string in the About dialog.
    - File->Record support
      o Needs error handling in time interval specification (on "OK")
      o Need shorter folio names, kmquery looks odd with long ones.
      o In Record mode we currently implement the old pmchart behaviour,
	which is to display a message about using pmafm when recording is
	stopped.  We could do much better by opening a new Tab such that
	the replay is all ready to go immediately, "in-line" in the current
	kmchart.  See the TODO comment in recorddialog.cpp.
      o We may want a QSession setting to allow a different default record
	interval, so that theres no need to set it to something else on
	each record invocation.
    - Qmc (Qt Metrics Class) needs to: support pmproxy, use a hash for
      metric instance values instead of an array (to support delete,
      and better support dynamic indoms down the track)
    - Make a model (ala. QDirModel) for metric namespace (QmcMetricModel
      or QmcNameSpaceModel?).  Maybe add an (editable) column for labels
      then (and colors, and...?)
    - Use QCompleter class in all file dialog file name line edits.
    - Use QCompleter class on QmcMetricModel?  (for metric selector)
    - Merge chart/source.* and libqmc/qmc_* code.
    - pmproxy support is far from complete:
      o Need libpcp changes (new interfaces) to abstract out the code
	which has a one-trip guard on testing/setting PMPROXY_HOST env
	variable during connect (so multiple contexts can have different
	proxies).
      o Need Qmc support for these interfaces instead of existing code.
      o Need to audit kmchart, see all PMPROXY TODOs in the code.
    - Rethink searching in New/Edit Chart dialogs - could be done by
	making the (gray background) text box double as a search text
	entry point.  Something like vi's /<pattern> key sequence to
	initiate new/next searches, with wrap-around to the top.
	The Firefox mechanism is kinda similar - take another look at
	that and see if anything can be learned from that.

    kmtime TODO list:
    - Finished, perfect, no bugs exist.  (yeah, right)
    - Needs online help ala kmchart

    PCP extensions
    - The pmSetMode(3) API needs a replacement that takes a timeval
      structure for a delta, instead of an integer.  The extended
      time base code should be factored out (into the old, backward
      compatible pmSetMode) and deprecated - used in pmval(1) atm.
    - This timeval delta change needs to be pushed all the way down
      into the PCP context structure, which fortunately isn't exposed
      outside of impl.h (AFAICT) - this would be an issue if it was,
      as the size of that structure will change due to relacing the
      current integer delta with a timeval.
    - Not much uses the integer delta however, its mainly interp.c in
      libpcp that uses it.  Note: libpcp_pmc also has an API that's
      affected here - PMC_Group::setArchiveMode
    - Some pmproxy changes are required to libpcp (see kmchart above).
      which will also require some new PMAPI interfaces.  The reason
      for these changes is to separate out the current behaviour that
      allows only one PMPROXY_HOST setting to be used for the life of
      a PCP client program, and instead allow the user to choose (and
      choose differently for differnt hosts), the pmproxy host that's
      associated with any pmcd host.

-- Ken McDonell & Nathan Scott
