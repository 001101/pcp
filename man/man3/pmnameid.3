'\"macro stdmacro
.\"
.\" Copyright (c) 2000 Silicon Graphics, Inc.  All Rights Reserved.
.\" 
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 2 of the License, or (at your
.\" option) any later version.
.\" 
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.\" or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
.\" for more details.
.\" 
.\" You should have received a copy of the GNU General Public License along
.\" with this program; if not, write to the Free Software Foundation, Inc.,
.\" 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
.\" 
.\" Contact information: Silicon Graphics, Inc., 1500 Crittenden Lane,
.\" Mountain View, CA 94043, USA, or: http://www.sgi.com
.\"
.\" $Id: pmnameid.3,v 2.9 2006/06/19 09:53:58 makc Exp $
.ie \(.g \{\
.\" ... groff (hack for khelpcenter, man2html, etc.)
.TH PMNAMEID 3 "SGI" "Performance Co-Pilot"
\}
.el \{\
.if \nX=0 .ds x} PMNAMEID 3 "SGI" "Performance Co-Pilot"
.if \nX=1 .ds x} PMNAMEID 3 "Performance Co-Pilot"
.if \nX=2 .ds x} PMNAMEID 3 "" "\&"
.if \nX=3 .ds x} PMNAMEID "" "" "\&"
.TH \*(x}
.rr X
\}
.SH NAME
\f3pmNameID\f1,
\f3pmRequestNameID\f1,
\f3pmReceiveNameID\f1 \- translate a PMID to a performance metric name
.SH "C SYNOPSIS"
.ft 3
#include <pcp/pmapi.h>
.sp
.nf
int pmNameID(pmID pmid, char **name)
int pmRequestNameID(int ctx, pmID pmid)
int pmRecieveNameID(int ctx, char **name)
.fi
.sp
cc ... \-lpcp
.ft 1
.SH DESCRIPTION
Given a
Performance Metric ID (PMID) via 
.IR pmid ,
.B pmNameID
will
determine the corresponding metric name, if any, in the 
Performance Metrics Name Space (PMNS), and return this via
.IR name .
.PP
If the PMNS contains multiple names associated with the requested
PMID, one of these will be returned via
.IR name ,
but there is no way to determine which of the duplicate names
this will be.  See
.BR pmNameAll (3)
if all of the corresponding names are required.
.PP
.I name
is a null-byte terminated string, allocated by
.B pmNameID
using
.BR malloc (3C)
and it is the caller's responsibility to call
.BR free (3C)
to release the storage when the value is no longer required.
.PP
In the absence of errors,
.B pmNameID
returns zero.
.PP
\f3pmRequestNameID\fP and \f3pmReceiveNameID\fP are used by
applications which must  communicate with the PMCD asynchronously.
These functions take explict context handle \f2ctx\fP which must
refer to a host context (i.e. creared by passing \f3PM_CONTEXT_HOST\fP
to \f3pmNewContext\fP). \f3pmRequestNameID\fP sends request to PMCD
to translate PMID to a metric name and returns without waiting for
the response, \f3pmReceiveNameID\fP reads reply from PMCD. It is the
responsibility of the application to make sure the data are ready before
calling \f3pmReceiveNameID\f1 to avoid blocking.
.SH SEE ALSO
.BR PMAPI (3),
.BR pmGetChildren (3),
.BR pmGetChildrenStatus (3),
.BR pmGetConfig (3),
.BR pmLoadASCIINameSpace (3),
.BR pmLoadNameSpace (3),
.BR pmLookupName (3),
.BR pmNameAll (3),
.BR pmNewContext (3),
.BR pcp.conf (4),
.BR pcp.env (4)
and
.BR pmns (4).
.SH DIAGNOSTICS
.IP \f3PM_ERR_NOPMNS\f1
Failed to access a PMNS for operation.
Note that if the application hasn't a priori called 
.BR pmLoadNameSpace (3)
and wants to use the distributed PMNS, then a call to
.B pmNameId
must be made after the creation of a context (see 
.BR pmNewContext (3)).
.IP \f3PM_ERR_PMID\f1
.I pmid
does not correspond to a defined PMID in the PMNS.
.IP \f3PM_ERR_*\f1
Other diagnostics are for protocol failures when
accessing the distributed PMNS.
.IP \f3PM_ERR_CTXBUSY\f1
Context is currently in use by another asynchronous call.
