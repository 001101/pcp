'\"macro stdmacro
.\"
.\" Copyright (c) 2009 Max Matveev
.\"
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.\" or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
.\" for more details.
.\"
.\" You should have received a copy of the GNU General Public License along
.\" with this program; if not, write to the Free Software Foundation, Inc.,
.\" 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
.\"
.ie \(.g \{\
.\" ... groff (hack for khelpcenter, man2html, etc.)
.TH MMV_LOOKUP_VALUE_DESC 3 "" "Performance Co-Pilot"
\}
.el \{\
.if \nX=0 .ds x} MMV_LOOKUP_VALUE_DESC 3 "" "Performance Co-Pilot"
.if \nX=1 .ds x} MMV_LOOKUP_VALUE_DESC 3 "Performance Co-Pilot"
.if \nX=2 .ds x} MMV_LOOKUP_VALUE_DESC 3 "" "\&"
.if \nX=3 .ds x} MMV_LOOKUP_VALUE_DESC "" "" "\&"
.TH \*(x}
.rr X
\}
.SH NAME
\f3mmv_lookup_value_desc\f1 - find a value in the Memory Mapped Value file
.SH "C SYNOPSIS"
.ft 3
#include <pcp/mmv_stats.h>
.sp
.nf
mmv_stats_value_t * 
mmv_lookup_value_desc(void *addr, const char *metric, const char *inst);
.fi
.sp
cc ... \-lpcp_mmv
.ft 1
.SH DESCRIPTION
.P
\f3mmv_lookup_value_desc\f1 searches for the value of the instance 
identified by the external instance name \f2inst\f1 of the metric
\f2metric\f1 in the \f3MMV\f1(4) file.
\f2addr\f1 is the address returned from \f3mmv_stats_init\f1().
.P
The pointer returned points to the following structure:
.P
.nf
    typedef struct mmv_stats_value_s {
        int metric;        /* Offset into the metric section */
        int instance;      /* Offset into corresponding indom section */
        union {
            __int32_t   i32;
            __uint32_t  u32;
            __int64_t   i64;
            __uint64_t  u64;
            float       f;
            double      d;
        } val;
        __int64_t extra;   /* extra space for INTEGRAL and DISCRETE */
    } mmv_stats_value_t;
.fi
.P
The caller is allowed to modify values if the \f2val\f1 and \f2extra\f1
elements but not the \f2metric\f1 or \f2instance\f1.
.SH RETURNS
The function returns the address inside of the memory mapped region
on success or NULL on failure.
.SH SEE ALSO
.BR mmv_stats_init (3),
.BR mmv_inc_value (3)
and
BR mmv (4).
