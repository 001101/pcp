Summary: System-level performance monitoring and performance management
Name: @package_name@
Version: @package_version@
Release: @package_release@@package_sgirelease@
License: GPLv2
Vendor: Silicon Graphics, Inc.
URL: http://oss.sgi.com/projects/pcp
Group: Applications/System

%define sgi_chroot_build @sgi_chroot_build@
%define sgi_issp_build @sgi_issp_build@
%define have_ibdev @have_ibdev@

%if %{have_ibdev}
%define ib_build_prereqs libibmad-devel libibumad-devel libibcommon-devel
%endif

%if %sgi_chroot_build
Source: @package_name@-@package_version@.tar.bz2
BuildRequires: gcc-c++ libstdc++-devel %{?ib_build_prereqs}
%else
Source: @package_name@-@package_version@-@package_release@.src.tar.gz
%endif

%if %{sgi_chroot_build}
%define ib_prereqs libibmad-pp >= 1.1.6-1.ofed20080604r1.3.1sgi601 libibumad-pp >= 1.1.7  libibcommon-pp 
%define ib_build_prereqs %{ib_prereqs} libibmad-pp-devel libibumad-pp-devel libibcommon-pp-devel
%else
%if %{have_ibdev}
%define ib_prereqs libibmad libibumad  libibcommon 
%define ib_build_prereqs %{ib_prereqs} libibmad-devel libibumad-devel libibcommon-devel
%endif
%endif

Distribution: @package_distribution@
%if %sgi_chroot_build
Packager: Silicon Graphics, Inc. <http://www.sgi.com/>
%endif
BuildRoot: @build_root@ 
BuildRequires: procps autoconf bison flex ncurses-devel %{?ib_build_prereqs}
BuildRequires: perl(ExtUtils::MakeMaker)

Conflicts: pcp-pro < 2.2

# Stuff used indirectly e.g. by shell scripts we install
Requires: bash gawk sed grep fileutils findutils cpp
%if "%{_vendor}" == "suse"
Requires: sysconfig
%else
Requires: initscripts
%endif

%if %sgi_chroot_build
Obsoletes: pcp <= @package_version@
Provides: pcp = @package_version@
%endif
Requires: pcp-libs = @package_version@

%description
Performance Co-Pilot (PCP) provides a framework and services to support
system-level performance monitoring and performance management. 

The PCP open source release provides a unifying abstraction for all of
the interesting performance data in a system, and allows client
applications to easily retrieve and process any subset of that data. 

#
# pcp-libs
#
%package libs
License: LGPLv2+
Group: Applications/System
Summary: Performance Co-Pilot run-time libraries
Vendor: Silicon Graphics, Inc.
URL: http://oss.sgi.com/projects/pcp/

Obsoletes: pcp < 3.0

%description libs
Performance Co-Pilot (PCP) run-time libraries

#
# pcp-libs-dvel
#
%package libs-devel
License: GPLv2
Group: Applications/System
Summary: Performance Co-Pilot (PCP) development headers and documentation
URL: http://oss.sgi.com/projects/pcp/

Requires: pcp-libs = @package_version@

%description libs-devel
Performance Co-Pilot (PCP) headers, documentation and tools for development.

#
# perl-PCP-PMDA. This is the PCP agent perl binding.
#
%package -n perl-PCP-PMDA
License: GPLv2
Group: Applications/System
Summary: Performance Co-Pilot (PCP) Perl bindings and documentation
URL: http://oss.sgi.com/projects/pcp/
Requires: pcp >= @package_version@

%description -n perl-PCP-PMDA
The PCP::PMDA Perl module contains the language bindings for
building Performance Metric Domain Agents (PMDAs) using Perl.
Each PMDA exports performance data for one specific domain, for
example the operating system kernel, Cisco routers, a database,
an application, etc.

#
# perl-PCP-MMV
#
%package -n perl-PCP-MMV
License: GPLv2
Group: Applications/System
Summary: Performance Co-Pilot (PCP) Perl bindings for PCP Memory Mapped Values
URL: http://oss.sgi.com/projects/pcp/
Requires: pcp >= @package_version@

%description -n perl-PCP-MMV
The PCP::MMV module contains the Perl language bindings for
building scripts instrumented with the Performance Co-Pilot
(PCP) Memory Mapped Value (MMV) mechanism.
This mechanism allows arbitrary values to be exported from an
instrumented script into the PCP infrastructure for monitoring
and analysis with pmchart, pmie, pmlogger and other PCP tools.

%if %sgi_chroot_build
%debug_package
%endif

# If .census exists, then no setup is necessary, just go and do the build,
# otherwise run setup
%prep
if [ -f .census ] ; then
   if [ ! -d ${RPM_PACKAGE_NAME}-${RPM_PACKAGE_VERSION} ] ; then
      ln -s . ${RPM_PACKAGE_NAME}-${RPM_PACKAGE_VERSION}
   fi
else
%setup -q
touch .census
autoconf
./configure --libdir=%{_libdir} && touch config.done
fi
%if %sgi_issp_build
%{_sgi_find_crypto}
%endif

%clean
[ ! -z "$DIST_ROOT" ] && rm -rf $DIST_ROOT
rm -Rf $RPM_BUILD_ROOT

%build
@make@ default_pcp

%install
rm -Rf $RPM_BUILD_ROOT
BACKDIR=`pwd`;
DIST_ROOT=$RPM_BUILD_ROOT
DIST_MANIFEST=`pwd`/install.manifest
export DIST_ROOT DIST_MANIFEST
rm -f $DIST_MANIFEST
@make@ install_pcp

set +x
PCP_CONF=$BACKDIR/src/include/pcp.conf
export PCP_CONF
. $BACKDIR/src/include/pcp.env

LIBFILELIST=`ls -1 $BACKDIR/debian/*.{install,dirs} | fgrep -v -- -dev.`
DEVFILELIST=`ls -1 $BACKDIR/debian/*-dev.{install,dirs}`

#
# Package split: pcp, pcp-libs, pcp-libs-devel
# -libs gets first pick, then libs-devel.
# The base package catches-all remaining.
#
sed -e 's/^/\//' $LIBFILELIST >libs_files
sed -e 's/^/\//' $DEVFILELIST >devel_files
%ifarch ia64 x86_64 ppc64
sed -i -e 's/usr\/lib\//usr\/lib64\//' libs_files
sed -i -e 's/usr\/lib\//usr\/lib64\//' devel_files
%endif

#
# some special cases for devel
awk '{print $NF}' $DIST_MANIFEST |\
egrep 'pcp\/(examples|demos)|pmdas\/(sample|simple|trivial|txmon)' >>devel_files

rm -f devel_files.rpm libs_files.rpm base_files.rpm
sort -u $DIST_MANIFEST | $PCP_AWK_PROG ' 
BEGIN {
    while( getline < "libs_files") lib[$0]=1;
    while( getline < "devel_files") dev[$0]=1;
}
{
    if (lib[$NF]) f="libs_files.rpm";
    else if (dev[$NF]) f="devel_files.rpm";
    else f="base_files.rpm"
}
$1 == "d" { printf ("%%%%dir %%%%attr(%s,root,root) %s\n", $2, $5) >> f } 
$1 == "f" { if ( match ($6, "'$PCP_VAR_DIR'/config") ||
		 match ($6, "'$PCP_SYSCONFIG_DIR'") ) {
	       printf ("%%%%config(noreplace) ") >> f;
	    }
	    if (match ($6, "'$PCP_MAN_DIR'") || match ($6, "'$PCP_DOC_DIR'")) {
		printf ("%%%%doc ") >> f;
	    }
	    printf ("%%%%attr(%s,root,root) %s\n", $2, $6) >> f }
$1 == "l" { print "%attr(0777,root,root)", $3 >> f }'

set -x

%preun
if [ "$1" -eq 0 ]
then
    #
    # Stop daemons before erasing the package
    #
    /sbin/service pcp stop >/dev/null 2>&1
    /sbin/service pmie stop >/dev/null 2>&1
    /sbin/service pmproxy stop >/dev/null 2>&1

    /sbin/chkconfig --del pcp >/dev/null 2>&1
    /sbin/chkconfig --del pmie >/dev/null 2>&1
    /sbin/chkconfig --del pmproxy >/dev/null 2>&1
fi

%post
/sbin/chkconfig --add pcp >/dev/null 2>&1
/sbin/chkconfig --add pmie >/dev/null 2>&1
/sbin/chkconfig --add pmproxy >/dev/null 2>&1

%post libs -p /sbin/ldconfig
%postun libs -p /sbin/ldconfig

%files -f base_files.rpm
%defattr(-,root,root)

%files libs -f libs_files.rpm
%defattr(-,root,root)

%files libs-devel -f devel_files.rpm
%defattr(-,root,root)

%files -n perl-PCP-PMDA -f perl-pcp-pmda.list
%defattr(-,root,root)

%files -n perl-PCP-MMV -f perl-pcp-mmv.list
%defattr(-,root,root)

%changelog
* Mon Oct 5 2009 Mark Goodwin <mgoodwin@redhat.com> - 3.0.0-7
- merged Kenj's tree with PMDA_INTERFACE_4 and dynamic PMNS
- ReplacePmnsSubtree fix bad signal handling botch

* Mon Sep 28 2009 Mark Goodwin <mgoodwin@redhat.com> - 3.0.0-6
- bump to v3.0.0 and reconcile spec with Fedora spec
