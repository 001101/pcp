#! /bin/sh
# PCP QA Test No. 348
# Install/Remove for Linux KVM pmda
#
# Copyright (c) 2008 Aconex.  All Rights Reserved.
#
# creator
owner=nathans

seq=`basename $0`
echo "QA output created by $seq"

# get standard filters
. ./common.product
. ./common.check
. ./common.filter

tmp=/tmp/$$
status=1
done_clean=false
kvm_stats_path=/sys/kernel/debug/kvm

if [ $PCP_PLATFORM != linux ]
then
    echo "KVM only exists on Linux" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
elif [ ! -d $kvm_stats_path ]
then
    echo "KVM sysfs interface not available" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

_cleanup()
{
    if $done_clean
    then
	:
    else
	[ -f $tmp.pmcd.conf ] && $here/sudo mv $tmp.pmcd.conf $PCP_PMCDCONF_PATH
	rm -f $tmp.*
	$here/sudo $PCP_RC_DIR/pcp start | _filter_pcp_start
	_wait_for_pmcd
	_wait_for_pmlogger
	done_clean=true
    fi
    exit $status
}

trap "_cleanup" 0 1 2 3 15

# real QA test starts here
here=`pwd`
home=$PCP_PMDAS_DIR
iam=kvm
if [ ! -d $home/$iam ]
then
    echo "Where is $home/$iam?"
    exit 1
fi
cd $home/$iam
unset ROOT

# copy the pmcd config file to restore state later.
cp $PCP_PMCDCONF_PATH $tmp.pmcd.conf

# start from a known starting point
$here/sudo ./Remove >/dev/null 2>&1
$here/sudo rm -f pmns domain.h

echo
echo "=== $iam agent installation ==="
$here/sudo ./Install </dev/null >$tmp.out 2>&1
_filter_pmda_install <$tmp.out

if pminfo -v $iam
then
    :
else
    echo "... failed! ... here is the Install log ..."
    cat $tmp.out
fi

echo
echo "=== validate values ==="
rm -f $tmp.stats $tmp.values $tmp.probe $tmp.diff
pmprobe -v $iam | LC_COLLATE=POSIX sort > $tmp.probe
for stat in `find $kvm_stats_path -mindepth 1`
do
    value=`cat $stat`
    echo $stat 1 $value | sed -e "s,$kvm_stats_path/,kvm.,g" >> $tmp.stats
done
LC_COLLATE=POSIX sort $tmp.stats > $tmp.values
diff $tmp.values $tmp.probe > $tmp.diff
if [ $? -ne 0 ]
then
    echo "Kernel stats and KVM PMDA exported values differ!"
    cat $tmp.diff
    exit
else
    echo "All good."
fi

echo
echo "=== remove $iam agent ==="
$here/sudo ./Remove >$tmp.out 2>&1
_filter_pmda_remove <$tmp.out

status=0
exit
