#! /bin/sh
# PCP QA Test No. 361
# Exercise cgroup metrics in the Linux PMDA
#
# Copyright (c) 2010 Aconex.  All Rights Reserved.
#
# creator
owner=nathans

seq=`basename $0`
echo "QA output created by $seq"

# get standard filters
. ./common.check
. ./localconfig

_cleanup()
{
    rm -f $tmp.*
    $sudo umount $grp 2>/dev/null
    rmdir $grp 2>/dev/null
}

tmp=/tmp/$$
grp=/tmp/cgroup_$seq
sudo=`pwd`/sudo
status=1	# failure is the default!
trap "_cleanup; exit \$status" 0 1 2 3 15

[ $PCP_PLATFORM = linux ] || _notrun "Tests pmdalinux functionality on Linux"
[ -f /proc/cgroups ] || _notrun "No support for cgroups in the running kernel"
grep -q cgroup /proc/mounts && _notrun "One or more cgroups already in use"
grep -q cpuacct /proc/cgroups || _notrun "No cpuacct cgroup support"
grep -q cpuset /proc/cgroups || _notrun "No cpuset cgroup support"
grep -q cpu /proc/cgroups || _notrun "No cpusched cgroup support"

rmdir $grp 2>/dev/null
mkdir $grp || _fail "Cannot create cgroup mount point"

# TODO: remove, debug only
pmda="-Kclear -Kadd,60,/source/git/pcp/src/pmdas/linux/pmda_linux.so,linux_init"
pmda=

# real test starts here
echo "initial fetch, starting with a clean slate"
pmprobe -L $pmda -v cgroup.mounts

echo "cpuset metrics fetch, no user groups defined, single controller"
$sudo mount -t cgroup -o cpuset none $grp || _fail "cpuset mount"
pminfo -L $pmda -m cgroup.mounts cgroup.groups
$sudo umount $grp || _fail "cpuset umount"

echo "cpuacct and cpuset fetch, no user groups defined, dual controllers"
$sudo mount -t cgroup -o cpuacct,cpuset none $grp || _fail "cpu,cpuacct mount"
pminfo -L $pmda -m cgroup.mounts cgroup.groups
$sudo umount $grp || _fail "cpu,cpuacct cgroup umount"

# success, all done
status=0
exit
