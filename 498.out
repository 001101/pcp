QA output created by 498

events arriving with no queues setup yet (fail)
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "?" (1024 bytes)
add queue#0 event(0,1024) -> -22 Invalid argument

attempt to register duplicate queue names (fail)
new queue(queue1,1024) -> 0
new queue(queue1,1024) -> -17 File exists

attempt queue creation without memory limit (fail)
new queue(queue1,0) -> -22 Invalid argument

create one queue, events arriving with no clients yet
new queue(queue1,1024) -> 0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue1" (128 bytes)
add event(queue1,128) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue1" (42 bytes)
add event(queue1,42) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue1" (18 bytes)
add event(queue1,18) -> 0 [TIME]
event queue#0 count=3, bytes=188, clients=0, mem=0

multiple queues, events arriving without clients
new queue(queue0,1024) -> 0
new queue(queue1,512) -> 1
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (128 bytes)
add event(queue0,128) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#1 "queue1" (24 bytes)
add event(queue1,24) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (18 bytes)
add event(queue0,18) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#1 "queue1" (228 bytes)
add event(queue1,228) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (142 bytes)
add event(queue0,142) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#1 "queue1" (28 bytes)
add event(queue1,28) -> 0 [TIME]
event queue#0 count=3, bytes=288, clients=0, mem=0
event queue#1 count=3, bytes=280, clients=0, mem=0
new queue(queue2,356) -> 2
[DATE] pmdaqueue(PID) Info: Appending event: queue#2 "queue2" (328 bytes)
add event(queue2,328) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#2 "queue2" (32 bytes)
add event(queue2,32) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (17 bytes)
add event(queue0,17) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#1 "queue1" (227 bytes)
add event(queue1,227) -> 0 [TIME]
event queue#0 count=4, bytes=305, clients=0, mem=0
event queue#1 count=4, bytes=507, clients=0, mem=0
event queue#2 count=2, bytes=360, clients=0, mem=0

single queue, single client, coming and going, no events arriving
new queue(queue0,1024) -> 0
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=0 (total=1)
new client(1) -> 0
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=0, bytes=0, clients=0, mem=0
pmdaEventEndClient: ctx=1 slot=0
end client(1) -> 0
event queue#0 count=0, bytes=0, clients=-1, mem=0

single queue, single client, coming and going, with events arriving
new queue(queue0,1024) -> 0
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=0 (total=1)
new client(1) -> 0
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=0, bytes=0, clients=0, mem=0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (24 bytes)
add event(queue0,24) -> 0 [TIME]
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=1, bytes=24, clients=0, mem=0
pmdaEventEndClient: ctx=1 slot=0
end client(1) -> 0
event queue#0 count=1, bytes=24, clients=-1, mem=0

single queue, single client, queue filling up
new queue(queue0,42) -> 0
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=0 (total=1)
new client(1) -> 0
enable queue#0 access(1) -> 1
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=0, bytes=0, clients=0, mem=0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (24 bytes)
add event(queue0,24) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (2 bytes)
add event(queue0,2) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (8 bytes)
add event(queue0,8) -> 0 [TIME]
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=3, bytes=34, clients=0, mem=0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (28 bytes)
add event(queue0,28) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (28 bytes)
add event(queue0,28) -> 0 [TIME]
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=5, bytes=90, clients=0, mem=0

multiple queues, multiple clients coming and going, queues filling
Segmentation fault
new queue(queue0,1024) -> 0
new queue(queue1,512) -> 1
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=0 (total=1)
new client(84) -> 0
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=1 (total=2)
new client(42) -> 1
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=2 (total=3)
new client(21) -> 2
walking queue#0 events for client#84
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)

single queue, single filtering client
new queue(queue0,42) -> 0
[DATE] pmdaqueue(PID) Info: pmdaEventNewClient: new client, slot=0 (total=1)
new client(1) -> 0
client#1 set filter(sz<10) on queue#0-> 0
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=0, bytes=0, clients=0, mem=0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (24 bytes)
add event(queue0,24) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (2 bytes)
add event(queue0,2) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (8 bytes)
add event(queue0,8) -> 0 [TIME]
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=3, bytes=34, clients=0, mem=0
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (28 bytes)
add event(queue0,28) -> 0 [TIME]
[DATE] pmdaqueue(PID) Info: Appending event: queue#0 "queue0" (28 bytes)
add event(queue0,28) -> 0 [TIME]
walking queue#0 events for client#1
[DATE] pmdaqueue(PID) Info: queue_fetch start, last event=(nil)
end walk queue#0
event queue#0 count=5, bytes=90, clients=0, mem=0
