#! /bin/sh
# PCP QA Test No. 073
# $Revision: 2.19 $
# Check disk inventory from libirixpmda.so
#
# Copyright (c) 1995-2002 Silicon Graphics, Inc.  All Rights Reserved.
#

seq=`basename $0`

echo "QA output created by $seq"

tmp=/tmp/$$
seq=`basename $0`
status=1
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

if which sar >/dev/null 2>&1
then
    if sar -d 1 1 >$tmp.sar 2>$tmp.err
    then
	:
    else
	echo "sar -d failed (`cat $tmp.err`)" >>$seq.notrun
	echo "$seq: [not run] `cat $seq.notrun`"
	exit 0
    fi
else
    echo "No sar command found" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

if which hinv >/dev/null 2>&1
then
    :
else
    echo "No hinv command found" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

if which dkstat >/dev/null 2>&1
then
    :
else
    echo "No dkstat command found" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

. ./common.product
. ./common.filter

# real QA test starts here
err=false

_output()
{
    for util in hinv sar dkstat pminfo
    do
	echo ""
	echo "================="
	echo $util
	echo "================="
	cat $tmp.$util
	echo "================="
	echo $util.list 
	echo "================="
	cat $tmp.$util.list
    done
}

hinv >$tmp.hinv

cdrom=`$PCP_AWK_PROG <$tmp.hinv '$1 == "CDROM:" { print "dks" $7 "d" $3 ; next }'`

sed -n <$tmp.hinv \
    -e 's/, / /g' \
    -e 's/: / /g' \
    -e '/Disk/p' \
| $PCP_AWK_PROG '
$1 == "Fabric"		{ printf "%s/lun%d/c%dp%d\n", $4, $8, $12, $6; next }
$9 == "RAID"		{ print "rad" $8 "d" $4 ; next }
$6 == "SCSI"		{ print "dks" $8 "d" $4 ; next }
$6 == "VME-SCSI"	{ print "jag" $8 "d" $4 ; next }
$5 == "lun" && $8 == "SCSI"	{ print "dks" $10 "d" $4 "l" $6 ; next }
		{ print }' \
| LC_COLLATE=POSIX sort >$tmp.hinv.list

sed <$tmp.sar -e '1,4d' -e 's/^..:..:../ /' -e 's/^  *//' -e 's/ .*//' \
| if [ "X$cdrom" != X ]
then
    sed -e "/^$cdrom\$/d"
else
    _filter_sar_bogus_disks
fi \
| LC_COLLATE=POSIX sort >$tmp.sar.list

dkstat 1 1 >$tmp.dkstat
$PCP_AWK_PROG < $tmp.dkstat 'NR==2 {print}' \
| tr ' ' '\012' \
| sed '/^$/d' \
| if [ "X$cdrom" != X ]
then
    sed -e "/^$cdrom\$/d"
else
    _filter_sar_bogus_disks
fi \
| LC_COLLATE=POSIX sort >$tmp.dkstat.list

pminfo -f disk.dev.total >$tmp.pminfo
sed -n <$tmp.pminfo -e '/inst/{
s/.* or "//
s/".*//p
}' \
| if [ "X$cdrom" != X ]
then
    sed -e "/^$cdrom\$/d"
else
    cat
fi \
| LC_COLLATE=POSIX sort >$tmp.pminfo.list

for util in hinv sar dkstat pminfo
do
    if [ -s $tmp.$util.list ]
    then
	uniq -c <$tmp.$util.list \
	| $PCP_AWK_PROG '
$1 > 1		{ print $1 " duplicates for " $2 }' >$tmp.out
	if [ -s $tmp.out ]
	then
	    echo "Error: duplicates in inventory for $util"
	    cat $tmp.out
	    err=true
	    echo ""
	fi
	[ $util = hinv ] && continue
	comm -3 $tmp.hinv.list $tmp.$util.list \
	| sed -e 's/	/		/' >$tmp.out
	if [ -s $tmp.out ]
	then
	    echo "Error: disk inventory mismatch"
	    echo "hinv only	$util only"
	    cat $tmp.out
	    err=true
	    echo ""
	fi
    else
	echo "Error: disk inventory for $util is empty"
	echo "Output from $util ..."
	cat $tmp.$util
	echo ""
	err=true
    fi
done

if $err
then
    echo "Errors encountered, here are the full outputs"
    _output
fi

_output >$seq.full

status=0
