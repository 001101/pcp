#!/bin/sh
# PCP QA Test No. 750
# Exercise the RPM PMDA
#
# Copyright (c) 2012, 2013 Red Hat.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

which rpm >/dev/null 2>&1 || _notrun "rpm not installed"
test -x "$PCP_PMDAS_DIR/rpm/pmdarpm" || _notrun "pmdarpm not installed"

status=0	# success is the default!
$sudo rm -fr $tmp.* $seq.full
trap "rm -fr $tmp.*; exit \$status" 0 1 2 3 15

canonicalize()
{
    sed \
	-e 's/[0-9]/9/g' \
	-e 's/9[9]*/9/g' \
	-e 's/  *$//' \
	-e '/^ *$/d' \
	-e 's/  */ /g' \
	-e 's/^ *//' \
	-e '/host:/d' \
	-e '/semantics:/d' \
	-e '/units:/d' \
	-e '/samples:/d' \
        -e 's/[a-z0-9]*\.src\.rpm/src.rpm/' \
	-e 's/[0-9]*\.[0-9]*\.[0-9]*-[0-9]*\.[a-z0-9]*/9.9.9-9.rel9/' \
	-e "s|\[[' /A-Za-z0-9\_\.\,\(\)\-]*\]|['/PATH/NAME', /PATH/NAME']|g"
}

# TODO: need to conditionally Install and Remove the PMDA (see test 348)
#       currently we're assuming its already there.

# TODO: output for package "python" is not deterministic across all
#       hosts - perhaps use the test rpm we install in 783 instead?
#       Will need a common.rpm script to facilitate sharing.
inst=python

# real QA test starts here
mkdir $tmp.$seq
cd $tmp.$seq

pmval -s 1 rpm.arch -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.buildhost -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.buildtime -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.description -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.epoch -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.group -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.installtime -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.license -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.packager -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.release -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.size -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.sourcerpm -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.summary -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.url -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.vendor -i $inst | canonicalize | tee -a $tmp.out 2>&1
pmval -s 1 rpm.version -i $inst | canonicalize | tee -a $tmp.out 2>&1

cat $tmp.out >>$here/$seq.full

# success, all done
cd $here

status=0
exit
