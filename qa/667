#! /bin/sh
# PCP QA Test No. 667
# checks basic pcp2graphite functionality
#
# Copyright (c) 2015 Red Hat, Inc.
#
seq=`basename $0`
echo "QA output created by $seq"

. ./common.product
. ./common.filter
. ./common.check

which nc >/dev/null 2>&1 || _notrun "No nc binary installed"
pcp2graphite --version 2>/dev/null || _notrun "python/modules missing"

graphite_port=2004
another_port=2003
echo | $PCP_BINADM_DIR/telnet-probe localhost $graphite_port \
	&& _notrun "Someone already listening on graphite port $graphite_port"
echo | $PCP_BINADM_DIR/telnet-probe localhost $another_port \
	&& _notrun "Someone already listening on second port $another_port"

$sudo rm -rf $tmp.dir
rm -f $seq.full
mkdir $tmp.dir

signal=$PCP_BINADM_DIR/pmsignal
status=1	# failure is the default!

_cleanup()
{
    $sudo rm -rf $tmp.dir
}
trap "_cleanup; exit \$status" 0 1 2 3 15

scale=10
ncpu=`pmprobe -v hinv.ncpu | awk '{print $3*'$scale'".0"}'`

echo | tee -a $seq.full
echo "=== 1. pcp2graphite one-shot pickle  ===" | tee -a $seq.full
nc -l localhost $graphite_port > $tmp.dir/test1.out &
ncpid=$!
sleep 2
pcp2graphite -t 1 hinv.ncpu hinv.ncpu 2>/dev/null &   # will error out after nc dies
p2gpid=$!
sleep 3
$signal $ncpid $p2gpid 2>/dev/null
# python pickled format is not easy to assert correctness
cat $tmp.dir/test1.out |
    egrep -a hinv.ncpu

echo "=== 2. pcp2graphite text, 2-second aligned  ===" | tee -a $seq.full
nc -k -l localhost $another_port > $tmp.dir/test2.out &
ncpid=$!
sleep 2
pcp2graphite -t 2 -P $another_port -u "/$scale" -m foobar. hinv.ncpu 2>/dev/null &
p2gpid=$!
sleep 5 # enough for at least 2 messages
$signal $ncpid $p2gpid 2>/dev/null
wait
cat $tmp.dir/test2.out | head -2 |
    sed -e "s,\.ncpu $ncpu ,.ncpu NCPUS ," |    # confirm ncpus value
    sed -r -e 's, [0-9]+[02468]$, TIMESTAMP2,'  # confirm time alignment

cat $tmp.dir/test*.out >> $seq.full

status=0
exit
