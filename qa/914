#!/bin/sh
# PCP QA Test No. 914
# Exercise Performance API (PAPI) pmda
#
# Copyright (c) 2014 Red Hat. All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ -d $PCP_PMDAS_DIR/papi ] || _notrun "PAPI PMDA is not installed"

status=1	# failure is the default!
$sudo rm -rf $tmp.* $seq.full
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
	-e 's/value [0-9][0-9]*/value NUMBER/' \
	-e 's/value \".*\"/value STRING/' \
	-e '/pfm_find_full_event(.*): event not found./d' \
	-e '/events in papi_events.csv were not valid./d' \
    # end
}

# real QA test starts here
pmda=$PCP_PMDAS_DIR/papi/pmda_papi.$DSO_SUFFIX,papi_init

echo
echo "== PAPI library behaviour, total instructions/cycles, non-root"
pminfo -L -K clear -K add,126,$pmda -f papi.TOT_INS papi.TOT_CYC 2>&1 | _filter

echo
echo "== PAPI library behaviour, available hardware metrics, non-root"
pminfo -L -K clear -K add,126,$pmda -f papi.available 2>&1 | _filter

echo
echo "== PAPI library behaviour, control metric fetches, non-root"
pminfo -L -K clear -K add,126,$pmda -f papi.control 2>&1 | _filter

#echo
#echo "== Testing local PAPI library behaviour, control metric stores"
#pmstore -L -K clear -K add,126,$pmda -f papi.control.enable TOT_INS

echo
echo "== PAPI library behaviour, total instructions/cycles, as root"
$sudo pminfo -L -K clear -K add,126,$pmda -f papi.TOT_INS papi.TOT_CYC 2>&1 | _filter

echo
echo "== PAPI library behaviour, available hardware metrics, as root"
$sudo pminfo -L -K clear -K add,126,$pmda -f papi.available 2>&1 | _filter

echo
echo "== PAPI library behaviour, control metric fetches, as root"
$sudo pminfo -L -K clear -K add,126,$pmda -f papi.control 2>&1 | _filter

#echo
#echo "== Testing local PAPI library behaviour, control metric store as root"
#pmstore -L -K clear -K add,126,$pmda -f papi.control.enable TOT_INS

# success, all done
status=0
exit
