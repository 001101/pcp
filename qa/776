#!/bin/sh
# PCP QA Test No. 946
# Test using the pmfind app to find pmcd servers using the active probing
# discovery mechanism
#
# Copyright (c) 2014 Red Hat.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_get_libpcp_config
$service_discovery || _notrun "No support for service discovery"

signal=$PCP_BINADM_DIR/pmsignal
$sudo $signal -a pmproxy pmwebd

status=1	# failure is the default!
$sudo rm -rf $tmp.* $seq.full
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

_success_filter()
{
    # Only pmcd is guaranteed to be running
    sed \
	-e '/  pcp:/d' \
	-e '/No pmproxy servers discovered/d' \
	-e '/No pmwebd servers discovered/d'
}

# real QA test starts here
# Make sure we can use ifconfig
if [ ! -x /sbin/ifconfig ]
then
    which ifconfig 2>/dev/null || _notrun "can't find ifconfig"
fi

# Obtain the inet addresses of the active network interfaces
ipv4_addrs=`/sbin/ifconfig | \
  grep 'inet ' | \
  grep -v 127.0.0.1 | \
  awk '{ print $2 }'`

# Probe the obtained networks.
for addr in $ipv4_addrs
do
    # Test various combinations of service queries and subnet sizes. Keep the
    # subnet size small -- say max 4 bits. However, don't use a mask that is
    # the full size of the interface address, because, if the interface address
    # is odd, it will never be probed.
    echo "-m probe=$addr/32" >> $seq.full
    echo "-m probe=INET_ADDR/32"
    pmfind -m probe=$addr/31 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-s pmcd -m probe=$addr/31" >> $seq.full
    echo "-s pmcd -m probe=INET_ADDR/31"
    pmfind -s pmcd -m probe=$addr/30 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -m probe=$addr/30" >> $seq.full
    echo "-q -m probe=INET_ADDR/30"
    pmfind -q -m probe=$addr/29 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -s pmcd -m probe=$addr/29" >> $seq.full
    echo "-q -s pmcd -m probe=INET_ADDR/29"
    pmfind -q -s pmcd -m probe=$addr/28 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -s pmcd -m probe=$addr/28,maxThreads=8" >> $seq.full
    echo "-q -s pmcd -m probe=INET_ADDR/28,maxThreads=8"
    pmfind -q -s pmcd -m probe=$addr/28,maxThreads=8 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full
done

# Obtain the ipv6 addresses of the active network interfaces
ipv6_addrs=`/sbin/ifconfig | \
  awk '\
    / mtu /  { interface=substr($1, 1, length($1) - 1) } \
    /inet6 / && !/::1/ { print $2"%"interface }'`

# Probe the obtained networks.
for addr in $ipv6_addrs
do
    # Test various combinations of service queries and subnet sizes. Keep the
    # subnet size small -- say max 4 bits.    echo "-m probe=$addr/127" >> $seq.full
    echo "-m probe=IPV6_ADDR/128"
    pmfind -m probe=$addr/128 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-s pmcd -m probe=$addr/127" >> $seq.full
    echo "-s pmcd -m probe=IPV6_ADDR/127"
    pmfind -s pmcd -m probe=$addr/126 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -m probe=$addr/126" >> $seq.full
    echo "-q -m probe=IPV6_ADDR/126"
    pmfind -q -m probe=$addr/125 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -s pmcd -m probe=$addr/125" >> $seq.full
    echo "-q -s pmcd -m probe=IPV6_ADDR/125"
    pmfind -q -s pmcd -m probe=$addr/124 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full

    echo "-q -s pmcd -m probe=$addr/124,maxThreads=8" >> $seq.full
    echo "-q -s pmcd -m probe=IPV6_ADDR/124,maxThreads=8"
    pmfind -q -s pmcd -m probe=$addr/124,maxThreads=8 | _success_filter
    echo "Exit status: $?" | tee -a $seq.full
done

# success, all done
status=0

exit
