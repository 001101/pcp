#!/bin/sh
# PCP QA Test No. 799
# Test Performance API (PAPI) pmda for conflicting metrics
#
# Copyright (c) 2014 Red Hat Inc.  All Rights Reserved.
#

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

[ -d $PCP_PMDAS_DIR/papi ] || _notrun "PAPI PMDA is not installed"

status=1	# failure is the default!
$sudo rm -rf $tmp.* $seq.full
trap "cd $here; rm -rf $tmp.*; exit \$status" 0 1 2 3 15

_filter_papi_errors()
{
    sed \
	-e '/pfm_find_full_event(.*): event not found./d' \
	-e '/events in papi_events.csv were not valid./d' \
	-e '/PAPI Error:*/d' \
	-e '/ibwarn:*/d' \
    # end
}

_filter()
{
    sed \
	-e 's/value [0-9][0-9]*/value NUMBER/' \
	-e 's/value \".*\"/value STRING/' \
    | _filter_papi_errors
}

# start actual QA
pmns=$PCP_PMDAS_DIR/papi/root
pmda=$PCP_PMDAS_DIR/papi/pmda_papi.$DSO_SUFFIX,papi_init

echo
echo "== PAPI library behaviour, adding conflicting metrics, as root"
$sudo pmstore -L -K clear -K add,126,$pmda -f -n $pmns papi.control.enable "BR_INS L2_DCA CA_SNP RES_STL REF_CYC" 2>&1 | _filter_papi_errors

echo
echo "== PAPI library behaviour, metric totals, as root"
$sudo pminfo -L -K clear -K add,126,$pmda -f -n $pmns papi.system.L2_DCA  2>&1 | _filter
$sudo pminfo -L -K clear -K add,126,$pmda -f -n $pmns papi.system.BR_INS  2>&1 | _filter
$sudo pminfo -L -K clear -K add,126,$pmda -f -n $pmns papi.system.CA_SNP  2>&1 | _filter
$sudo pminfo -L -K clear -K add,126,$pmda -f -n $pmns papi.system.RES_STL  2>&1 | _filter
$sudo pminfo -L -K clear -K add,126,$pmda -f -n $pmns papi.system.REF_CYC  2>&1 | _filter


# success, all done
status=0

exit
