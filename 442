#!/bin/sh
# PCP QA Test No. 442
# check 2^31 volume switching for pmlogextract
#
# Copyright (c) 2011 Ken McDonell.  All Rights Reserved.
#

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

seq=`basename $0`

rm -f big2.* big3.*

# Filesystem           1M-blocks Used Available Use% Mounted on
# /dev/sda5                57349     24838     29621  46% /
free=`df -m . \
| $PCP_AWK_PROG '
NR == 2	{ print $4 }'`

rm -f .notrun
if [ -z "$free" ]
then
    _notrun "Cannot determine free disk space (df -m fails)"
elif [ "$free" -lt 10240 ]
then
    # 10GB should keep us out of trouble
    _notrun "Insufficient free disk space ($free MB)"
    :
elif [ ! -f big1.0 ]
then
    _notrun "big1 archive missing, run QA 441 first!"
fi

echo "QA output created by $seq"

status=0	# success is the default!
$sudo rm -rf $tmp.* $seq.full
trap "rm -f $tmp.* big2.* big3.*; exit \$status" 0 1 2 3 15

for file in big1.*
do
    ln $file `echo $file | sed -e 's/big1/big2/'`
    :
done
ls -l big1* big2* >$seq.full 2>&1

_filter()
{
    sed \
	-e 's/[0-9][0-9]:[0-9][0-9]:[0-9][0-9]\.[0-9][0-9][0-9]/TIMESTAMP/g'
}

# real QA test starts here
pmlogextract big1 big2 big3 2>&1 | _filter
ls -l big3* >>$seq.full 2>&1

# expect 3 volumes, and all < 2^31 bytes in size
#
limit=2147483648
nvol=`ls big3.? | wc -l | sed -e 's/ //g'`
if [ $nvol -ne 3 ]
then
    ls -l big3.?
    echo "Error: expecting 3 volumes, found $nvol"
    status=1
fi

echo "0" >$tmp.bc
for vol in big1.?
do
    size=`stat $vol 2>&1 | $PCP_AWK_PROG '
$1 == "Size:"	{ print $2 }'`
    echo "+2*$size" >>$tmp.bc
done

for vol in big3.?
do
    size=`stat $vol 2>&1 | $PCP_AWK_PROG '
$1 == "Size:"	{ print $2 }'`
    if [ -z "$size" ]
    then
	stat $vol
	echo "Error: cannot extract size for volume $vol"
	status=1
    elif [ "$size" -ge $limit ]
    then
	ls -l $vol
	echo "Error: size ($size) exceeds limit ($limit)"
	status=1
    fi
    echo "-$size" >>$tmp.bc
done

cat $tmp.bc >>$seq.full
echo
echo "sum(input data volume sizes) - sum(output data volume sizes)"
( tr '\012' ' ' <$tmp.bc ; echo ) | bc

echo
echo "Temporal Index Entries ..."
for arch in big1 big2 big3
do
    echo "$arch: `pmdumplog -t $arch | grep '^[0-9]' | wc -l | sed -e 's/ //g'`"
done

# success, all done
exit
