#!/bin/sh
# PCP QA Test No. 569
# $Revision: 1.18 $
# exercise pmprobe, and pv 679693 in particular
#
#
# Copyright (c) 1995-2002 Silicon Graphics, Inc.  All Rights Reserved.
#
# creator
owner=kenmcd

seq=`basename $0`
. ./localconfig
if [ "$PCP_PLATFORM" = irix ]
then
    if [ $PCP_EOE_VER -ge 6513 ]
    then
	rm -f $seq.out && ln $seq.out.2 $seq.out || exit 1
	echo "Pmprobe with changes from pv. 807561"
    else
	rm -f $seq.out && ln $seq.out.1 $seq.out || exit 1
    fi
else
    # open source
    if [ $PCP_EOE_VER -ge 2402 ]
    then
	rm -f $seq.out && ln $seq.out.2 $seq.out || exit 1
	echo "Pmprobe with changes from pv. 807561"
    else
	rm -f $seq.out && ln $seq.out.1 $seq.out || exit 1
    fi
fi
	 
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

tmp=/tmp/$$
sudo=`pwd`/sudo
status=1	# failure is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

_filter()
{
    sed \
	-e '/^sample\.many\./d' \
	-e '/^sample\.bigid/d' \
	-e '/sample\.byte_/d' \
	-e '/sample\.kbyte_/d' \
	-e '/sample\.dynamic\.meta/d' \
	-e '/sample\.datasize/d' \
	-e '/^sample\.mirage/s/ [0-9].*/ NUMVAL VAL or INST .../' \
	-e '/^sample\.dynamic\./s/ [0-9].*/ NUMVAL VAL or INST .../' \
	-e '/sample\.wrap\./{
s/ -*[0-9][0-9]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.daemon_pid /{
s/ [0-9][0-9]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\..*\.write_me /{
s/ [0-9][0-9]*/ NUMBER/g
s/ ".*"/ "STRING"/g
s/ NUMBER/ 1/
}' \
	-e '/sample\..*seconds /{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.colour /{
s/ \([0-9]\)/ X\1/
s/ [0-9][0-9.]*/ NUMBER/g
s/ X/ /
}' \
	-e '/sample\.drift /{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.step/{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\..*pdu /{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.rapid /{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.dodgey\./{
s/ \([0-9]\)/ X\1/
s/ [0-9][0-9.]*/ NUMBER/g
s/ X/ /
}' \
	-e '/sample\.magnitude /{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.scale_step\./{
s/ [0-9][0-9.]*/ NUMBER/g
s/ NUMBER/ 1/
}' \
	-e '/sample\.lights /s/ ".*"/ "STRING"/g' \
	-e '/sample\.sysinfo 1/d' \
    | fold -w160
}

# real QA test starts here
for arg in '' -i -I -v -iI -iv -iIv
do
    echo
    echo "=== $arg ==="
    pmprobe $arg sample \
    | _filter
done

# success, all done
status=0
exit
