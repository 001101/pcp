#! /bin/sh
# PCP QA Test No. 297
# $Revision: 1.12 $
#
# exercise pmproxy and client reconnect
#
# Copyright (c) 2005 Silicon Graphics, Inc.  All Rights Reserved.

# creator
owner=kenmcd

seq=`basename $0`
echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

if which pmproxy >/dev/null 2>&1
then
    :
else
    echo "No pmproxy mview binary installed" >$seq.notrun
    echo "$seq: [not run] `cat $seq.notrun`"
    exit 0
fi

. ./localconfig

case "$PCP_PLATFORM" in
irix)
    PMCDLOG=$PCP_LOG_DIR/pmcd.log
    ;;
linux)
    PMCDLOG=$PCP_LOG_DIR/pmcd/pmcd.log
    ;;
*)
    echo "Unknown platfrom $PCP_PLATFORM"
    exit 1
esac

tmp=/tmp/$$
here=`pwd`
sudo=$here/sudo
status=0	# success is the default!
$sudo rm -rf $tmp.*
trap "_cleanup; rm -f $tmp.*; exit \$status" 0 1 2 3 15

_cleanup()
{
    $sudo killall pmproxy >/dev/null 2>&1
    $sudo /etc/init.d/pmproxy start >/dev/null 2>&1
}

fqdn=`pmhostname`
hostname=`hostname | sed -e 's/\..*//'`

_filter()
{
    sed \
	-e '/^pmWhichContext/d' \
	-e '/^pmUseContext/d' \
	-e '/^pmNewZone/d' \
	-e '/^pmUseZone/d' \
	-e '/^__pmFdLookup/d' \
	-e '/^__pmDecodeXtendError/d' \
	-e '/^__pmAddIPC/d' \
	-e '/^__pmSendCreds/d' \
	-e '/^IPC table/d' \
	-e '/^__pmConnectPMCD.* failed/d' \
	-e '/^__pmConnectPMCD/{
s/'$fqdn'/MY_HOST/g
s/'$hostname'/MY_HOST/g
s/[0-9][0-9]*/N/g
}' \
	-e '/^pmReconnectContext.* failed/d' \
	-e '/^pmReconnectContext.* too soon/d' \
	-e '/^pmNewContext/{
s/'$fqdn'/MY_HOST/g
s/'$hostname'/MY_HOST/g
}' \
	-e '/^Context\[/{
s/'$fqdn'/MY_HOST/g
s/'$hostname'/MY_HOST/g
s/[0-9][0-9]*/N/g
}' \
	-e '/^[A-Z][a-z][a-z] [A-Z][a-z][a-z]  *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9]/{
# pmdumptext
s//DATE/
s/	[0-9][0-9.]*/	N/g
}' \
    | uniq
}

$sudo /etc/init.d/pmproxy stop >/dev/null 2>&1
$sudo killall pmproxy >/dev/null 2>&1

PMCD_RECONNECT_TIMEOUT=1
export PMCD_RECONNECT_TIMEOUT

pmproxy -Dcontext -l $tmp.log

PMPROXY_HOST=localhost
export PMPROXY_HOST

# real QA test starts here
pmdumptext -Dcontext -t 0.5 sample.bin >$tmp.out 2>&1 &

# don't need to confuse pmproxy or pmcd ...
#
unset PMPROXY_HOST

sleep 3
echo "killing pmproxy ..."
killall pmproxy >/dev/null 2>&1
sleep 2
echo "1st pmproxy log" >$seq.full
cat $tmp.log >>$seq.full

echo "re-starting pmproxy ..."
pmproxy -Dcontext -l $tmp.log

sleep 4
echo "killing pmcd ..."
$sudo /etc/init.d/pcp stop >/dev/null 2>&1
sleep 2
echo >>$seq.full
echo "1st pmcd log" >>$seq.full
cat $PMCDLOG >>$seq.full

echo "re-starting pmcd ..."
$sudo /etc/init.d/pcp start >/dev/null 2>&1

sleep 4
echo >>$seq.full
echo "2nd pmproxy log" >>$seq.full
cat $tmp.log >>$seq.full
echo >>$seq.full
echo "2nd pmcd log" >>$seq.full
cat $PMCDLOG >>$seq.full

kill -INT $!

echo >>$seq.full
echo "pmdumptext output" >>$seq.full
cat $tmp.out >>$seq.full

_filter <$tmp.out

# success, all done
exit
