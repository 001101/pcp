'\"macro stdmacro
.\"
.\" Copyright (c) 2017 Ronak Jain.
.\"
.\" This program is free software; you can redistribute it and/or modify it
.\" under the terms of the GNU General Public License as published by the
.\" Free Software Foundation; either version 2 of the License, or (at your
.\" option) any later version.
.\"
.\" This program is distributed in the hope that it will be useful, but
.\" WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
.\" or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
.\" for more details.
.\"
.\"
.TH PMDAPROMETHEUS 1 "PCP" "Performance Co-Pilot"
.SH NAME
\f3pmdaprometheus\f1 \- Prometheus PMDA
.SH DESCRIPTION
\fBpmdaoprometheus\fR is a Performance Metrics Domain Agent (PMDA) which imports
metrics from Prometheus endpoints which expose text based Prometheus metrics.
.PP
Further details on the Prometheus exposition format can be found at https://prometheus.io/docs/instrumenting/exposition_formats
.SH METADATA SOURCES
\fBpmdaprometheus\fR scans the $PCP_PMDAS_DIR/prometheus/metadata directory, looking for metadata files (*.json). These JSON metadata files describe the names, types, etc. of their associated Prometheus metrics for a given endpoint. For example, let's assume the following simple Prometheus metric:
.PP
.nf
.fam C
# HELP go_goroutines Number of goroutines that currently exist.
# TYPE go_goroutines gauge
go_goroutines 86
.fam T
.fi
.PP
The associated metadata file would look like the following:
.PP
.nf
.fam C
  {
    "metrics": [
      {
        "type": "double",
        "name": "go_goroutines",
        "semantic": "instantaneous",
        "prometheus_name": "go_goroutines",
        "desc": "Number of goroutines that currently exist.",
        "units_str": ""
      }
    ]
  }
.fam T
.fi
.PP
.SH METADATA GENERATOR
.PP
PMDA Prometheus metadata generator helps in generating the heuristic metadata for the Prometheus metrics endpoint.
.PP
.B $PCP_PMDAS_DIR/prometheus/pmdaprometheus.python
[\fI\,OPTIONS]
.PP
Mandatory  arguments  to  long  options are mandatory for short options too.
Following are the mandatory options:
.TP
\fB\-g\fR, \fB\-\-generate\fR
generate the heuristic metadata
.TP
\fB\-u\fR, \fB\-\-url\fR=\fI\,STRING\/\fR
url of the prometheus endpoint
.TP
\fB\-n\fR, \fB\-\-name\fR=\fI\,STRING\/\fR
name of the prometheus endpoint
.SH INSTALLATION
Install the prometheus PMDA by using the Install script as root:
.PP
      # cd $PCP_PMDAS_DIR/prometheus
.br
      # ./Install
.PP
To uninstall, do the following as root:
.PP
      # cd $PCP_PMDAS_DIR/prometheus
.br
      # ./Remove
.PP
\fBpmdaprometheus\fR is launched by \fIpmcd\fR(1) and should never be executed
directly. The Install and Remove scripts notify \fIpmcd\fR(1) when the
agent is installed or removed.
.SH FILES
.IP "\fB$PCP_PMDAS_DIR/prometheus/Install\fR" 4
installation script for the \fBpmdaprometheus\fR agent
.IP "\fB$PCP_PMDAS_DIR/prometheus/Remove\fR" 4
undo installation script for the \fBpmdaprometheus\fR agent
.IP "\fB$PCP_PMDAS_DIR/prometheus/metadata/\fR" 4
metadata files for the \fBpmdaprometheus\fR agent
.IP "\fB$PCP_LOG_DIR/pmcd/prometheus.log\fR" 4
default log file for error messages from \fBpmdaprometheus\fR
.SH PCP ENVIRONMENT
Environment variables with the prefix \fBPCP_\fR are used to parameterize
the file and directory names used by \fBPCP\fR. On each installation, the
file \fB/etc/pcp.conf\fR contains the local values for these variables.
The \fB$PCP_CONF\fR variable may be used to specify an alternative
configuration file, as described in \fIpcp.conf\fR(5).
.SH SEE ALSO
.BR pmcd (1),
.BR pminfo (1)
and
.BR pmprobe (1).
