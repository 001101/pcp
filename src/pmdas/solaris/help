#
# Copyright (c) 2000-2004 Silicon Graphics, Inc.  All Rights Reserved.
# 
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 2 of the License, or (at your
# option) any later version.
# 
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA
#
# Solaris PMDA help file in the ASCII format
#
# lines beginning with a # are ignored
# lines beginning @ introduce a new entry of the form
#  @ metric_name oneline-text
#  help test goes
#  here over multiple lines
#  ...
#
# the metric_name is decoded against the default PMNS -- as a special case,
# a name of the form NNN.MM (for numeric NNN and MM) is interpreted as an
# instance domain identification, and the text describes the instance domain
#
# blank lines before the @ line are ignored
#

@ kernel.all.cpu.idle TODO
@ kernel.all.cpu.user TODO
@ kernel.all.cpu.sys TODO
@ kernel.all.cpu.wait.total TODO
@ kernel.percpu.cpu.user TODO
@ kernel.percpu.cpu.idle TODO
@ kernel.percpu.cpu.sys TODO
@ kernel.percpu.cpu.wait.total TODO
@ disk.all.read TODO
@ disk.all.write TODO
@ disk.all.total TODO
@ disk.all.read_bytes TODO
@ disk.all.write_bytes TODO
@ disk.all.total_bytes TODO
@ disk.dev.read TODO
@ disk.dev.write TODO
@ disk.dev.total TODO
@ disk.dev.read_bytes TODO
@ disk.dev.write_bytes TODO
@ disk.dev.total_bytes TODO
# #@ mem.page_faults TODO
# #@ mem.available TODO
# #@ mem.committed_bytes TODO
# #@ mem.pool.paged_bytes TODO
# #@ mem.pool.non_paged_bytes TODO
# #@ mem.cache.read_ahead TODO
# #@ mem.cache.lazy_writes TODO
# #@ mem.cache.lazy_write_pages TODO
# #@ mem.cache.mdl.read TODO
# #@ mem.cache.mdl.sync_read TODO
# #@ mem.cache.mdl.async_read TODO
@ network.interface.mtu Maximum Transmission Unit of a network interface
Maximum Transmision Unit is the largest size of IP datagram which can be
transferred over the data link.
@ network.interface.in.bytes Number of bytes received by a network interface
@ network.interface.in.errors Number of receive errors per network interface
Number of receive errors per network interface. The errors counted towards
this metric are: IP header errors, packets larger then the link MTU, packets
delivered to the unknown address, packets sent to the unknown IP protocol,
truncated packets, packets discarded due to not having a route for
the destination.
@ network.interface.in.drops Number of packets droped by a network interface
Number of packets discared due to lack of space during the input processing.
@ network.interface.in.delivers Number of packets delivered to ULPs
Number of packets delivered for further processing by the upper-layer
protocols.
@ network.interface.in.bcasts Number of broadcast packets received by a network interface
@ network.interface.in.packets Number of IP packets received by a network interface
@ network.interface.in.mcasts Number of multicast packets received by a network interface
@ network.interface.out.packets Number of packets sent by a network interface
@ network.interface.out.bytes Number of bytes sent by a network interface
@ network.interface.out.errors Number of send errors per network interface
@ network.interface.out.bcasts Number of broadcast packets sent by a network interface
@ network.interface.out.mcasts Number of multicast packets sent by a network interface
@ network.interface.out.drops Number of packets discared by a network interface
Number of packets discared due to lack of space during the output processing.
@ network.udp.ipackets Number of UDP packets received
@ network.udp.opackets Number of UDP packets sent
@ network.udp.ierrors Number of receive errors in UDP processing
@ network.udp.oerrors Number of send erros in UDP processing
@ network.udp.noports Number of UDP packets received on unknown UDP port
Number of UDP packets received for which here is no port can be found.
This counter is reported on the per-interface basis and aggregated by the PMDA.

@ network.udp.overflows Number of UDP packets droped due to queue overflow
Number of UDP packets droped due to queue overflow. 
This counter is reported on the per-interface basis and aggregated by the PMDA.

# #@ network.interface.total.packets TODO
# #@ network.interface.total.bytes TODO

@zpool.capacity	Total capacity of a zpool in bytes
@zpool.used Total space used on a pool
@zpool.checksum_errors Number of checksum errors per zpool
@zpool.self_healed Number of bytes healed
@zpool.in.bytes	Counter of bytes read from a zpool
@zpool.out.bytes Counter of bytes written to a zpool
@zpool.in.ops Counter of reads per zpool
@zpool.out.ops Counter of writes per zpool
@zpool.in.errors Counter of read errors per zpool
@zpool.out.errors Counter of write errors per zpool
@zpool.state Current state of zpool
@zpool.state_int vs_aux << 8 | vs_state

@zfs.available Amount of space available to the dataset
The amount of space available to the dataset (a filesystem, 
a snapshot or a volume) and all its children. This is usually
the amount of space available in the zpool which houses the
dataset.

@zfs.used.total Amount of space used by the dataset and its children
The amount of space consumed by the filesystem, snapshot or
volume and all its children. This amount does not include
any reservation made by the dataset itself but do include
the reservation of the children.

@zfs.used.byme Amount of space used by the dataset itself.
This amount exclude any space used by the children of this dataset
or any of its snapshots.

@zfs.used.bysnapshots Amount of space used by the snapshots of the dataset
The amount of space consumed by the snapshots of this dataset.

@zfs.used.bychildren Amount of space used by decendents of the dataset
The amount of space consumed by all the decendants of this dataset.

@zfs.quota Maximum amount of space a dataset can use
Quotas are used to restrict the growth of the datasets. If
the quota is set to 0 then the size of the dataset is limited only
by the size of the pool which houses this dataset.

@zfs.reservation Minimum amount of space guaranteed to a dataset
The amount of space which dataset and its decendents are guaranteed
to be available for them to use. This amount of taken off the quota
of the parent of the dataset.

@zfs.compression Compression ratio of the dataset
Compression ratio is expressed as multiplier. To estimate how much data
will be used by the uncompressed data multiply the amount of space used
by the dataset by the compression ratio.

@zfs.copies Number of redundant copies of data
The number of redundant copies does not include any copies made as
part of the pool redundancy.

@zpool.perdisk.state Current state per disk in zpool
@zpool.perdisk.state_int vs_aux << 8 | vs_state
@zpool.perdisk.checksum_errors Number of checksum errors per disk in zpool
@zpool.perdisk.self_healed Number of bytes healed per disk in zpool
@zpool.perdisk.in.errors Counter of read errors per disk in zpool
@zpool.perdisk.out.errors Counter of write errors per disk in zpool

@network.link.in.errors Number of input errors per link
Counts input errors per link
@network.link.in.packets Numbe of datagrams received by a link
@network.link.in.bytes Number of bytes received by a link
Counts number of bytes received by a link. For the physical links
this is the raw counter of bytes received, for the aggregated links
this is the number of bytes received by all links in the aggregation
group
@network.link.in.bcasts Number of broadcast datagrams received by a link
@network.link.in.mcasts Number of multicast datagrams
Counts multicast datagram recieved by a link.
@network.link.in.nobufs Number of inpit packets discared
Counts number of packets discared because of failure to allocate buffers
@network.link.out.errors Number of output errors per link
@network.link.out.packets Number of packets sent from a link
@network.link.out.bytes Number of bytes sent from a link
@network.link.out.bcasts Number of broadcast datagrams sent from a link
@network.link.out.mcasts Number of multicast datagrams sent from a link
@network.link.out.nobufs Number of output packets discared
Counts number of packets discared because of failure to allocate buffers
@network.link.collisions Number of collisions detected per link
@network.link.state Link state
1 - Link is up, 2 - Link is down, 0 - unknown state
@network.link.duplex Link duplex
1 - Half duplex, 2 - Full duplex
@network.link.speed Link speed in bytes per second
@hinv.pagesize Memory page size
The memory page size of the running kernel in bytes.
@hinv.physmem Total physical system memory
Total physical system memory size rounded down to the nearest page size
boundary
@pmda.uname identity and type of current system
Identity and type of current system.  The concatenation of the values
returned from utsname(2), also similar to uname -a.
