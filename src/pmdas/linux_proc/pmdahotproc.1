'\"macro stdmacro
.TH PMDAPROC 1 "PCP" "Performance Co-Pilot"
.SH NAME
\f3pmdaproc\f1 \- Additional information for hotproc metrics that are included in the linux_proc pmda
.br
.SH DESCRIPTION
Included inside of the standard
.B pmdaproc
Performance Metrics Domain Agent (PMDA) are an aditional set of 
.B proc 
performance metrics from an instance domain of processes restricted
to an "interesting" or "hot" set. Unlike the stock metrics exported by the
.B proc 
PMDA which have an instance domain equal to the current processes,
.B hot
metrics have an instance domain which is a subset of this and is
determined by a configuration file and a refresh interval. 
.P
As well as
the
.B proc
metrics, 
.B hotproc
provides a \f3cpuburn\f1 metric which specifies the cpu utilization
of the process over the refresh interval, \f3total\f1 metrics which
indicate how much of the cpu that the "interesting" processes are
accounting for, \f3predicate\f1 metrics which show the values of
the reserved variables (see below) that
are being used in the hotproc predicate and \f3control\f1 metrics
for controlling the agent.
.PP
.SH CONFIGURATION
The configuration file consists of one predicate used to determine if
a process should be in the interesting set or not.
.PP
An example configuration file may be found at
.B $PCP_PMDAS_DIR/proc/samplehotproc.conf
.PP
This file with any modifications can be copied to
.B $PCP_PMDAS_DIR/proc/hotproc.conf
in order to configure the
.B hot
metrics. The
.B pmstore
interface can be used as well (described below)
.PP
The predicate is described
using the language specified below. The symbols are based on those
used by 
.BR c (1) 
and 
.BR awk (1) .
.TP 
Boolean Connectives
.B &&
(and),
.B ||
(or),
.B !
(not),
.B ()
(precedence overriding)
.TP 
Number comparators
.B <
,
.B <=
,
.B >
,
.B >=
,
.B ==
,
.B !=
.TP 
String comparators
.B ==
,
.B !=
.TP 
String/Pattern comparators
.B ~
(string matches pattern)
,
.B !~
(string does not match pattern)
.TP 
Reserved variables
.B uid
(user id; type integer)
.B uname
(user name; type string),
.B gid
(group id; type integer)
.B gname
(group name; type string),
.B fname
(process file name; type string),
.B psargs
(process file name with args; type string),
.B cpuburn
(cpu utilization; type float),
.B iodemand
(I/O demand - Kbytes read/written per second; type float),
.B ctxswitch
(number of context switches per second; type float),
.B syscalls
(number of system calls per second; type float),
.B virtualsize
(virtual size in Kbytes; type float),
.B residentsize
(resident size in Kbytes; type float),
.B iowait
(blocked and raw io wait in secs/sec; type float),
.B schedwait
(time waiting in run queue in secs/sec; type float).
.TP
Literal values
.B 1234
(positive integer),
.B 0.35
(positive float),
\f3"foobar"\f1
(string; delimited by \f3"\f1),
.B /[fF](o)+bar/
(pattern; delimited by \f3/\f1),
.B true
(boolean),
.B false
(boolean)
.TP
Comments
.B #this is a comment
(from \f3#\f1 to the end of the line).
.TP
Examples
  cpuburn > 0.2 # cpu utilization of more than 20%
  cpuburn > 0.2 && uname == "root"
  cpuburn > 0.2 && (uname == "root" || uname == "hot")
  psargs ~ /pmda/ && cpuburn > 0.4

.PP
The \f3hotproc.predicate\f1 metrics may be used
to see what the values of the reserved variables are
that were used by the predicate at the last refresh.
They do not cover the reserved variables which are
already exported elsewhere. A \f3hotproc.predicate\f1 metric
may not have a value if it is not referenced in the configuration
predicate. 
 
.SH PMSTORE
The
.B hot
metrics can also be configured through the
.B pmstore(1)
interface
.TP
Examples
  pmstore hotproc.control.config 'fname == "mingetty"'
  pmstore hotproc.control.config 'uid == 0'
.TP
To force the config file to be reloaded:
  pmstore hotproc.control.reload_config "1"

.SH INSTALLATION
See
.BR pmdaproc (1)
for installation.
.SH FILES
.PD 0
.TP 10
.B $PCP_PMDAS_DIR/proc/samplehotproc.conf
simple sample configuration
.PP
This will configure
.B hotproc
to contain all non-root processes plus (root) proceses with cpu utilization of .05 or greater
.PD
.SH SEE ALSO
.BR PCPIntro (1),
.BR pmdaproc (1)
and
.BR pmstore (1).
