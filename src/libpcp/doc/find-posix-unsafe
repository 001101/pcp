#!/bin/sh
#
# Find routines that have been flagged by POSIX as possibly thread
# unsafe
#
# In the source files, use of these routines can be marked in a comment
# either on the previous line of the source or the line with the call
# as follows with the word THREADSAFE to indicate the code has been
# analyzed and either mutual exclusion is guaranteed, e.g. by holding
# a lock, or the results of the call are not invalidated by any
# concurrency, e.g. rand();	/* THREADSAFE */
#

tmp=/var/tmp/$$
sts=0
trap "rm -f $tmp.*; exit \$sts" 0 1 2 3 15
rm -f $tmp.*

_usage()
{
    echo >&2 "Usage: $0 [-a] [file ...]"
    echo >&2
    echo >&2 "Options:"
    echo >&2 " -a	ignore THREADSAFE tagging"
    echo >&2 "   	[default is to suppress these ones]"
}

if [ ! -f posix.unsafe ]
then
    echo >&2 "Error: cannot find file: posix.unsafe"
    sts=1
    exit
fi

all=false
while getopts "a?" c
do
    case $c
    in
	a)
	    all=true
	    ;;

	?)
	    _usage
	    sts=1
	    exit
	    ;;
    esac
done
shift `expr $OPTIND - 1`

if [ $# -eq 0 ]
then
    set -- ../src/*.c
fi

sed <posix.unsafe >$tmp.awk \
    -e '/^#/d' \
    -e 's/.*/\/[^a-zA-Z0-9_"]&[ 	]*\\(\/ { found = 1 }/'

if $all
then
    echo 'found == 1	{ print NR; found = 0 }' >>$tmp.awk
else
    cat <<'End-of-File' >>$tmp.awk
/THREADSAFE/	{ safe = 2 }
found == 1	{ if (!safe) print NR
		  found = 0
		}
safe > 0	{ safe-- }
End-of-File
fi

for file
do
    awk -f $tmp.awk $file >$tmp.lineno
    awk <$tmp.lineno >$tmp.show '
BEGIN	{ last = 0 }
	{ f = $1-2
	  l = $1+2
	  if (f > last) {
	    # new range
	    if (last > 0) {
		print first "," last "p"
		print last "s@.*@--- '$file':[" first "," last "] ---@p"
	    }
	    first = f;
	    last = l;
	  }
	  else
	    last = l
	}
END	{ if (last > 0)
	    print first "," last "p"
	    print last "s@.*@--- '$file':[" first "," last "] ---@p"
	}'

    sed -n -f $tmp.show $file
done
