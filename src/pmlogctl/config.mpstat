#
# pmlogger configuration file for collecting mpstat-equivalent metrics
#
#
# metrics annotated "+" are not available from sar, but are available
# from PCP and are strongly related and useful
#
# metrics annotated "-" are not available from PCP because the sar
# metric is not a simple time average or rate converted value
#
# metrics annotated "X" are available in both, but the units may be
# different or some simple arithmetic (eg using pmie) may be required
# to produce the same values
#
# metrics annotated "?" are ones where the information is available,
# but relationship between the sar and the PCP metrics is not 1:1

log mandatory on default {

# -I -------------------------------------------------

	kernel.percpu.interrupts.MCP
	kernel.percpu.interrupts.MCE
	kernel.percpu.interrupts.THR
	kernel.percpu.interrupts.TRM
	kernel.percpu.interrupts.TLB
	kernel.percpu.interrupts.CAL
	kernel.percpu.interrupts.RES
	kernel.percpu.interrupts.RTR
	kernel.percpu.interrupts.IWI
	kernel.percpu.interrupts.PMI
	kernel.percpu.interrupts.SPU
	kernel.percpu.interrupts.LOC
	kernel.percpu.interrupts.line46
	kernel.percpu.interrupts.line45
	kernel.percpu.interrupts.line44
	kernel.percpu.interrupts.line43
	kernel.percpu.interrupts.line42
	kernel.percpu.interrupts.line41
	kernel.percpu.interrupts.line40
	kernel.percpu.interrupts.line23
	kernel.percpu.interrupts.line19
	kernel.percpu.interrupts.line18
	kernel.percpu.interrupts.line16
	kernel.percpu.interrupts.line12
	kernel.percpu.interrupts.line9
	kernel.percpu.interrupts.line8
	kernel.percpu.interrupts.line1
	kernel.percpu.interrupts.line0

# -u --------------------------------------------------

	kernel.all.cpu.user 		# %usr kernel.percpu.cpu.user
	 kernel.percpu.cpu.user
	kernel.all.cpu.nice 		# %nice kernel.percpu.cpu.nice
	 kernel.percpu.cpu.nice
	kernel.all.cpu.sys 		# %sys kernel.percpu.cpu.nice
	 kernel.percpu.cpu.sys
	kernel.all.cpu.wait.total 	# %iowait
	 kernel.percpu.cpu.wait.total
	kernel.all.cpu.intr		# %irq
	 kernel.percpu.cpu.intr
	kernel.all.cpu.irq.soft		# %soft
	 kernel.percpu.cpu.irq.soft
	kernel.all.cpu.steal		# %steal
	 kernel.percpu.cpu.steal
	kernel.all.cpu.guest		# %guest
	 kernel.percpu.cpu.guest
	kernel.all.cpu.idle		# %idle
	 kernel.percpu.cpu.idle

}
