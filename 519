#! /bin/sh
# PCP QA Test No. 519
# $Revision: 1.16 $
# exercise new action args (no limit of 2) for pmie ... caused
# pmie to dump core initially
#
#
# Copyright (c) 1995-2002 Silicon Graphics, Inc.  All Rights Reserved.
#
# creator
owner=kenmcd

seq=`basename $0`

. ./localconfig
rm -f $seq.out && ln $seq.${PCP_PLATFORM} $seq.out || exit 1

echo "QA output created by $seq"

# get standard environment, filters and checks
. ./common.product
. ./common.filter
. ./common.check

_filter()
{
    sed \
	-e 's/[A-Z][a-z][a-z] [A-Z][a-z][a-z] *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9]/TIMESTAMP/' \
	-e 's/[A-Z][a-z][a-z] *[0-9][0-9]* [0-9][0-9]:[0-9][0-9]:[0-9][0-9]/TIMESTAMP/' \
	-e "s/`hostname | sed -e 's/\..*//'`/HOST/" \
	-e 's/[0-9][A-Z]:HOST/HOST/' \
	-e 's/\(pmie[([]\)[0-9][0-9]*/\1PID/'
}

tmp=/tmp/$$
here=`pwd`
sudo=$here/sudo
status=0	# success is the default!
trap "rm -f $tmp.*; exit \$status" 0 1 2 3 15

PMCD_CONNECT_TIMEOUT=60
PMCD_REQUEST_TIMEOUT=60
export PMCD_CONNECT_TIMEOUT PMCD_REQUEST_TIMEOUT

eval `./getpmcdhosts -n 2 -L | sed -e 's/ / other2=/' -e 's/^/other1=/'`
if [ -z "$other1" ]
then
    echo "Error: cannot find first remote host running pmcd"
    exit
fi
if [ -z "$other2" ]
then
    echo "Error: cannot find second remote host running pmcd"
    exit
fi

# real QA test starts here
$sudo rm -f core* $seq.core*

cat <<End-of-File | pmie -T 10sec >$tmp.out 2>$tmp.err
// use hosts not in QA circus
//

hosts = ":'$other1' :'$other2'";

some_host (
  some_inst (
    ( 100 * irix.filesys.used \$hosts / irix.filesys.capacity \$hosts ) > 50 ) )
-> shell 15 "src-oss/show-args -c SYSMON -t PERF_INFO_SYSTEM -m 'file system over half-full" "\n%h:[%i] %v% " "'"
 & syslog 15 "-p daemon.info" "PCP QA - please ignore - ..." " %h:[%i] %v% ";

End-of-File

echo "pmie output ..."
sed <$tmp.out \
    -e "/^$other1:/d" \
    -e "/^$other2:/d"
grep "^$other1:" <$tmp.out >/dev/null && echo "... at least one line for other1 host"
grep "^$other2:" <$tmp.out >/dev/null && echo "... at least one line for other2 host"

echo
echo "pmie stderr ..."
_filter <$tmp.err

echo
echo "SYSLOG ..."
case "$PCP_PLATFORM" in
irix)
    SYSLOG=/var/adm/SYSLOG;
    ;;
linux)
    SYSLOG=/var/log/messages;
    ;;
*)
    echo "Unknown platfrom - $PCP_PLATFORM";
    exit 1
    ;;
esac
 
$sudo tail -100 $SYSLOG \
| sed -n '/PCP QA - please ignore/s/\.\.\..*/.../p' \
| _filter \
| sort -u

_check_core

exit
